9/11/00, by Mike Talcott. Перевод 13-Сен-2000, Владимир Кладов. По всем вопросам по-английски просьба обращаться к автору (miketads@usa.net), можно по-русски ко мне (bonanzas@xcl.cjb.net?subject=StrDB).

StrDb.pas - это попытка реализовать небольшой движок базы данных для объектов KOL. Обеспечена функциональность таблицы базы данных для объекта KOL TStrList. Так же, как и для KOL, акцент сделан на маленький размер. Тестовая программа TestStrDB.exe - всего 29K.

Записи - строки фиксированной длины.
Поля - строки фиксированного размера в пределах записи.
Сохранение данных любого типа (float, data) в виде строк упрощает функциональность.

Объект StrTable инкапсулирует:
 Массив определений полей (FldDefArray)
 TStrList, содержащий все записи (RecList)
 Строку, содержащую текущую запись (RecStr)
 Номер текущей строки (fCurrRecNum)
 Несколько функций и процедур для работы с таблицей (AddFldDef, First, EditRec, etc)

Экземпляр объекта StrTable создается функцией NewStrTable.
Затем добавляются определения полей, которые обеспечивают имена полей (Field Name) и их размер (Field Width).
Таблица может быть заполнена вручную, затем сохранена (См. TestStDb.dpr)
Альтернативно, данные фиксированного размера могут быть экспортированы из существующей базы данных или таблицы (Excel).
Данные записываются в текущую запись с указанием имен полей.
  Напр:   SetFld('Name',E1.Text);
          SetFld('EMail',E2.Text);
          SetFld('URL',E3.Text);
По заполнении, текущая запись (RecStr) сохраняется в TStrList (RecList) операцией  Insert или AddRec.
Методы First, Prior, Next, Last и SetCurrRec копируют указанную строку из RecList: TStrList в текущую запись (RecStr).
Данные могут быть получены из текущей записи методом GetFld('Name').
Далее они могут быть модифицированы и помещены обратно в поле текщей записи.
Этот метод обновления отличается от привычных методов (Insert, Fill Fields, Post -и- Edit, Modify Fields, Post)
Данный метод наиболее подходит для объекта StrTable.
Если желательно, интерфейс пользователя может быть запрограммирован для обычной работы:
  Вставить пустую запись (Insert a Blank Record),
  Сделать эту запись текущей (Make That Field Current),
  Ввести данные (Enter the Data),
  Отправить запись (Post Record) или Удалить пустую запись (Delete the Blank Record), если пользователь отменил ввод новой записи.

Доступ ко всем методам и свойствам TStrList возможен через свойство TStrTable.RecList.???
Таким образом, доступна сортировка, загрузка из файла и так далее.
Хотя Windows API позволяет упростить сортировку в listview по колонкам (сообщение 
 LVM_SORTITEMS), данная возможность пока не реализована.

Программа TestStrDb загружает и сохраняет таблицу как Temptabl.asc.
Если Temptabl.asc отсутствует, она создается заново, после чего пользователь вводит некоторые данные и сохраняет ее (только по нажатию кнопки Save).

LoadFromFile позволяет загрузить файл в RecList только целиком.
Если нужен доступ только к некоторой(ым) записи, файл может быть открыт как FileStream, после чего может быть выполнена фильтрация и желаемые записи могут быть добавлены в RecList.

Дополнительно, обеспечиваются две процедуры для автоматической загрузки данных из StrTable в ListView:
  FillListView Добавляет колонки с такими же именами как инема полей в таблице. Далее этот метод вызывает:
  FillListGrid , который добавляет записи из RecList.
  Метод FillListGrid может быть вызван при необходимости для обновления состояния RecList.
  Ширина колонки определена первоначально как ( 4 пиксела умножить на ширину поля ).
  Далее возможно это изменить (после загрузки данных в Listview (даже 0 является возможным значением - для скрытия колонки).

TestStrDB.dpr содержит пример того, как использовать функции Windows API, даже если они не определены в KOL.pas:
 Например, процедура RetrieveRec в TestStrDB использует:
  LV.Perform( LVM_ENSUREVISIBLE, CurrRecNum, 0);
 , что обеспечивает перемещение окна просмотра таким образом, чтобы выделенная строка оказалась видимой в нем.

Любая база данных может быть соединена с текстовым файлом, содержащим поля фиксированной ширины, генерируемым TStrTable. Например: 
1) Сохраняем таблицу: TStrList.RecList.SavetoFile в файл filename.asc.
2) Соединяемся с таблицей из MS Access в режиме Text file - Fixed width.
3) MS Access может использовать эту присоедтненную таблицу ISAM (с некоторыми ограничениями:
    Новые записи могут быть добавлены, существующие могут быть прочитаны, но не отредактированы или удалены).
    При использовании импорта в MS Access, записи могут быть скопированы в другую таблицу, если требуется редактирование.
    Для экспорта в StrTable, запрос "обновления" (update) может скопировать данные из присоединенной таблицы.
    Запросы Select и т.п. в MS Access не представляют проблемы.


Mike не планирует начинать большой проект, включающий поддержку всех возможных баз данных и их функций. В большинстве случаев, лучше избегать использования BDE, Apollo, Interbase и других.
Данный модуль предназначен для работы с небольшими таблицами (список телефонов, адресная книга и т.п.)

Все это, разумеется, freeware.
 Идея такой простой таблицы базы данных is copyrighted (C) to Mike Talcott.
 Автор надеется, что она будет полезна кому-нибудь.

Mike Talcott

miketads@usa.net

