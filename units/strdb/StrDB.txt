9/11/00

StrDb.pas is an attempt at a small database engine for KOL Objects.
It provides database functionality to the TStrList KOL Object.
As in KOL, the emphasis is on small. The test program, TestStrDB.exe is 29K.

The records are fixed width strings.
The fields are fixed width substrings of the records.
This simpifies the database functions since everything is stored as a string
 including floats, dates etc.

The StrTable object encapsulates:
 An array of Field Definition records (FldDefArray)
 A TStrList containing all the records (RecList)
 A string holding the current record (RecStr)
 A Current Record Number integer (fCurrRecNum)
 Several Database functions and procedures (AddFldDef, First, EditRec, etc)

The StrTable is created with the NewStrTable function.
Field Definitions are then added which provides the Field Name and Field Width.
The table can be populated manually then saved. (See TestStDb.dpr)
 Alternately, fixed width data can be exported from an existing database or
 spreadsheet.
Data is copied into the Current Record string (RecStr) via named fields.
  Ex:     SetFld('Name',E1.Text);
          SetFld('EMail',E2.Text);
          SetFld('URL',E3.Text);
When complete, RecStr is stored in the TStrList (RecList) via Insert or AddRec.
The First, Prior, Next, Last and SetCurrRec procedures copy the indexed RecList
 string into RecStr (the current record).
The data is retrieved from RecStr via GetFld('Name'), etc.
This can then be modified and stored back in RecList via PostRec.
This manner of adding and editing records is different from the normal methods:
  (Insert, Fill Fields, Post -and- Edit, Modify Fields, Post)
This method is better suited to the StrTable object.
If desired, the user interface can be programmed to work normally:
  (Insert a Blank Record, Make That Field Current, Enter the Data, Post Record
    or Delete the Blank Record if the User Cancels.)

Access to all the TStrList's methods and properties are available via
 TStrTable.RecList.???
In this way Sorting, LoadFromFile, SaveToFile etc can be accomplished.
Incidently, Windows API appears to simplify sorting the listview by columns via
 LVM_SORTITEMS, but I haven't gotten into that yet.

The TestStrDb program stores and loads it's table as Temptabl.asc.
If Temptabl.asc is missing it creates a new one after the user has entered some
 data and saved it.
Note that in TestStrDb.dpr the data is entered into RecList and is not saved to
 disk until the Save button is clicked.

LoadFromFile is only one means of loading the RecList.
If only certain records in a file are needed, a file could be opened via
 TFileStream, filtering could be done and the desired records can be Added
 to RecList.

Additionally, two procedures are provided to automatically load a TListView
 object from a StrTable:
  FillListView adds columns with the same names as the field names. It then calls:
  FillListGrid which adds the records found in the RecList as items.
   FillListGrid can be called as required to repaint the grid and reflect RecList.
  The column width is currently 4pixels * the field width.
   This can be adjusted after the Listview is loaded (even to 0 to hide the column).

Note: TestStrDB.dpr has an example of how to use a control's Windows API function
  even if it is not yet in KOL.pas:
 The RetrieveRec procedure in the TestStrDB file uses:
  LV.Perform( LVM_ENSUREVISIBLE, CurrRecNum, 0);
 This ensures that the listview scrolls to a selected item if it's not visible.

Any database that can connect to fixed width text files can link to tables
 generated by TStrTable. For Example: 
1) Save the table via TStrList.RecList.SavetoFile to a filename.asc.
2) Link to the table in MS Access as a Text file - Fixed width.
3) MS Access can use this ISAM linked table in a limited manner:
    New records can be added, existing records can be read - but not edited or
     deleted.
    For import into MS Access, records can be copied to another table if editing
     is required.
    For export into a StrTable, an update query can copy data to the linked table.
    Select queries etc. in MS Access should be no problem.


I don't plan for this to become a big involved project supporting all kinds of
 database functions. You'd be better off using BDE, Apollo, Interbase or some
 other database for that.
This should work for small database needs such as phonelists, address books, etc.

All of this is of course freeware.
 This particular idea of a simple string database is copyrighted (C) to me.
 I hope it's useful to someone.

Mike Talcott

miketads@usa.net

