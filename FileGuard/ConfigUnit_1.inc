{ KOL MCK } // Do not remove this line!
const ColFileType = 0;
const ColFileTypeDescription = 1;
const ColButtons = 0;
const TB1 = 0;
const TB2 = 2;

const Col1 = 0;
const _TC_Tab0 = 0;
const _tcJoystick = 1;
const _tcColorMapping = 2;
const _tcEmulation = 3;
const _tcSound = 4;
const _tcVideo = 5;
const _tcMulticolor = 6;
const _tcToolbar = 7;
const _tcFileOps = 8;
const _tcAssociations = 9;
const _tcRoms = 10;
const _tcMiscellanous = 11;
const TBCMapOpen = 3;
const TBCMapSave = 4;
const TBCMapRestore = 6;
const TBCMapRestoreAll = 7;
const TBCMapSetDefault = 9;

const ColPluginPlaySnd = 0;

procedure NewFormConfig( var Result: PFormConfig; AParent: PControl );
begin

  {$IFDEF KOLCLASSES}
  Result := PFormConfig.Create;
  {$ELSE OBJECTS}
  New( Result, Create );
  {$ENDIF KOL CLASSES/OBJECTS}
  Result.Form := NewForm( AParent, 'Configuration' ).SetPosition( 181, 261 ).SetClientSize( 699, 356 ).Tabulate;
  Result.Form.Add2AutoFree( Result );
    Result.Form.Visible := False;
    Result.Form.Style := Result.Form.Style and not WS_MAXIMIZEBOX;
    Result.Form.Font.FontHeight := 16;
    Result.Form.Font.FontName := 'Arial';
      Result.Form.OnMessage := Result.KOLForm1Message;
      Result.Form.OnClose := Result.KOLForm1Close;
      Result.Form.OnShow := Result.KOLForm1Show;
      Result.Form.OnHide := Result.KOLForm1Hide;
      Result.Form.OnDestroy := Result.KOLForm1Destroy;

    Result.SaveCMapDialog := NewOpenSaveDialog( 'Save Color Map as', '', [  ] );
      Result.SaveCMapDialog.Filter := 'EmuZ Color Map (*.ecm)|*.ecm';
      Result.SaveCMapDialog.OpenDialog := FALSE;
      Result.SaveCMapDialog.DefExtension := 'ecm';
  Result.Form.Add2AutoFree( Result.SaveCMapDialog );

    Result.SelectPKUNZIPDialog := NewOpenSaveDialog( 'Select PKNZIP.EXE Loacation', '', [ OSFileMustExist, OSHideReadonly, OSOverwritePrompt, OSPathMustExist, OSReadonly ] );
      Result.SelectPKUNZIPDialog.DefExtension := 'exe';
  Result.Form.Add2AutoFree( Result.SelectPKUNZIPDialog );

    Result.OpenKeyMapDialog := NewOpenSaveDialog( 'Select Emulator Key Map for load', '', [  ] );
      Result.OpenKeyMapDialog.Filter := 'Emulator Key Map|*.ekm';
      Result.OpenKeyMapDialog.DefExtension := 'ekm';
  Result.Form.Add2AutoFree( Result.OpenKeyMapDialog );

    Result.OpenCMapDialog := NewOpenSaveDialog( 'Select EmuZ Color Map file to open', '', [  ] );
      Result.OpenCMapDialog.Filter := 'EmuZ Color Map (*.ecm)|*.ecm';
      Result.OpenCMapDialog.DefExtension := 'ecm';
  Result.Form.Add2AutoFree( Result.OpenCMapDialog );

    Result.OpenROMDialog := NewOpenSaveDialog( 'Select ROM image file', '', [  ] );
      Result.OpenROMDialog.Filter := 'ROM images (*.ROM)|*.ROM';
      Result.OpenROMDialog.DefExtension := 'rom';
  Result.Form.Add2AutoFree( Result.OpenROMDialog );

    Result.SaveKeyMapDialog := NewOpenSaveDialog( 'Save Emulator Key Map as', '', [  ] );
      Result.SaveKeyMapDialog.Filter := 'Emulator Key Map (*.ekm)|*.ekm';
      Result.SaveKeyMapDialog.OpenDialog := FALSE;
      Result.SaveKeyMapDialog.DefExtension := 'ekm';
  Result.Form.Add2AutoFree( Result.SaveKeyMapDialog );

    Result.IL_Checks := NewImageList( Result.Form );
    Result.IL_Checks.Colors := ilcColorDDB;
      Result.IL_Checks.ImgWidth := 20;
      Result.IL_Checks.ImgHeight := 16;
      {$R FormConfig_IL_Checks.res}
    Result.IL_Checks.AddMasked( LoadBmp( hInstance, 'FORMCONFIG_IL_CHECKS', Result.IL_Checks ), clFuchsia );

    Result.IL_Thumb := NewImageList( Result.Form );
    Result.IL_Thumb.Colors := ilcColorDDB;
      Result.IL_Thumb.ImgWidth := 16;
      Result.IL_Thumb.ImgHeight := 16;
      {$R FormConfig_IL_Thumb.res}
    Result.IL_Thumb.AddMasked( LoadBmp( hInstance, 'FORMCONFIG_IL_THUMB', Result.IL_Thumb ), clFuchsia );
    // Result.Button1.TabOrder = 0
    Result.Button1 := NewButton( Result.Form, 'OK' ).SetPosition( 632, 333 ).SetSize( 0, 23 );
    // Result.LV1.TabOrder = 1
    Result.LV1 := NewListView( Result.Form, lvsDetailNoHeader, [ lvoEditLabel, lvoRowSelect ], nil, nil, nil ).SetAlign ( caLeft ).SetSize( 151, 0 );
    Result.LV1.Color := clWindow;
    Result.LV1.LVColAdd( '1', taLeft, 108);
    // Result.TC.TabOrder = 1
    Result.TC := NewTabControl( Result.Form, [ 'KM', 'JM', 'CM', 'Emu', 'Snd', 'Vid', 'MC', 'TB', 'Fil', 'AF', 'Roms', 'Misc' ], [ tcoBottom ], nil, 0 ).SetAlign ( caClient );
    Result.TC.TabStop := FALSE;
    // Result.TC.Pages[ 0 ].TabOrder = 0
    // Result.tcKeyMapping.TabOrder = 10
        Result.tcKeyMapping := NewPanel( Result.TC.Pages[ 0 ], esNone ).SetPosition( 0, 0 ).SetSize( 534, 332 );
    // Result.pnCfgKeymapping.TabOrder = 2
          Result.pnCfgKeymapping := NewPanel( Result.tcKeyMapping, esNone ).SetAlign ( caClient );
          Result.pnCfgKeymapping.Border := 8;
          Result.pnCfgKeymapping.Visible := False;
    // Result.Panel2.TabOrder = 0
            Result.Panel2 := NewPanel( Result.pnCfgKeymapping, esNone ).SetAlign ( caTop ).SetSize( 0, 29 );
            Result.Panel2.Border := 2;
    // Result.Toolbar1.TabOrder = 0
              Result.Toolbar1 := NewToolbar( Result.Panel2, caTop, [tboNoDivider], THandle( -1 ), [ 'Load', '-', 'Save' ], [ 7, -2, 8 ] ).SetAlign ( caTop );
              Result.Toolbar1.MarginLeft := 200;
                Result.Toolbar1.TBAssignEvents( 0, [ Result.Toolbar1TB1Click, nil, Result.Toolbar1TB2Click ] );
    // Result.chkRemapOn.TabOrder = 0
                Result.chkRemapOn := NewCheckBox( Result.Toolbar1, 'Remapping On    ' ).SetAlign ( caLeft ).AutoSize( TRUE );
                Result.chkRemapOn.Checked := TRUE;
    // Result.chkJoyEnable.TabOrder = 1
                Result.chkJoyEnable := NewCheckBox( Result.Toolbar1, 'Enable Joystick    ' ).SetAlign ( caLeft ).AutoSize( TRUE );
                Result.chkJoyEnable.Enabled := False;
    // Result.ScrollBox1.TabOrder = 1
            Result.ScrollBox1 := NewScrollBoxEx( Result.pnCfgKeymapping, esLowered ).SetAlign ( caClient );
    // Result.pnKeyMaps.TabOrder = 0
              Result.pnKeyMaps := NewPanel( Result.ScrollBox1, esNone ).SetSize( 489, 233 );
              Result.pnKeyMaps.Border := 4;
    // Result.TC.Pages[ 1 ].TabOrder = 1
    // Result.pnCfgJoystick.TabOrder = 0
        Result.pnCfgJoystick := NewPanel( Result.TC.Pages[ 1 ], esNone ).SetAlign ( caClient );
        Result.pnCfgJoystick.Visible := False;
    // Result.Label27.TabOrder = -1
          Result.Label27 := NewLabel( Result.pnCfgJoystick, '3 buttons, Autodetect' ).SetPosition( 200, 248 ).AutoSize( TRUE );
    // Result.Label29.TabOrder = -1
          Result.Label29 := NewLabel( Result.pnCfgJoystick, '1 button, Autodetect, Right click to recalibrate speed' ).SetPosition( 200, 296 ).AutoSize( TRUE );
    // Result.Label55.TabOrder = -1
          Result.Label55 := NewWordWrapLabel( Result.pnCfgJoystick, 'Be careful: joystick(s) can produce input which can cause problems if you forget about it or it is not connected!' ).SetPosition( 8, 204 ).SetSize( 513, 31 );
    // Result.Label28.TabOrder = -1
          Result.Label28 := NewLabel( Result.pnCfgJoystick, '1 button, Autodetect' ).SetPosition( 200, 272 ).AutoSize( TRUE );
    // Result.chkJoySingle.TabOrder = 0
          Result.chkJoySingle := NewRadioBox( Result.pnCfgJoystick, 'Single joystick' ).SetPosition( 8, 8 ).AutoSize( TRUE );
          Result.chkJoySingle.SetRadioChecked;
    // Result.chkJoyTwo.TabOrder = 1
          Result.chkJoyTwo := NewRadioBox( Result.pnCfgJoystick, 'Both joysticks have its own assignments' ).SetPosition( 8, 32 ).AutoSize( TRUE );
    // Result.grpJoy.TabOrder = 2
          Result.grpJoy := NewGroupBox( Result.pnCfgJoystick, ' Two Joysticks' ).SetPosition( 24, 64 ).SetSize( 409, 109 );
    Result.grpJoy.TabStop := FALSE;
          Result.grpJoy.Enabled := False;
          Result.grpJoy.TextAlign := taCenter;
    // Result.Label8.TabOrder = -1
            Result.Label8 := NewLabel( Result.grpJoy, 'Joystick 2' ).SetPosition( 16, 64 ).AutoSize( TRUE );
    // Result.Label7.TabOrder = -1
            Result.Label7 := NewLabel( Result.grpJoy, 'Joystick 1' ).SetPosition( 16, 32 ).AutoSize( TRUE );
    // Result.cbJoy1.TabOrder = 0
            Result.cbJoy1 := NewComboBox( Result.grpJoy, [ coReadOnly, coNoIntegralHeight ] ).SetPosition( 96, 32 ).SetSize( 169, 0 );
    Result.cbJoy1.Color := clWindow;
            Result.cbJoy1.Items[ 0 ] := 'Kempston';
            Result.cbJoy1.Items[ 1 ] := 'Sinclair I (6789 0)';
            Result.cbJoy1.Items[ 2 ] := 'Sinclair II (1234 5)';
            Result.cbJoy1.Items[ 3 ] := 'Fuller Box';
            Result.cbJoy1.Items[ 4 ] := 'Cursor (5678 0)';
            Result.cbJoy1.Items[ 5 ] := 'Custom only';
            Result.cbJoy1.CurIndex := 0;
    // Result.chkInvertY1.TabOrder = 1
            Result.chkInvertY1 := NewCheckBox( Result.grpJoy, 'Invert Y Axe' ).SetPosition( 280, 32 ).AutoSize( TRUE );
            Result.chkInvertY1.Tag := 1;
    // Result.cbJoy2.TabOrder = 2
            Result.cbJoy2 := NewComboBox( Result.grpJoy, [ coReadOnly, coNoIntegralHeight ] ).SetPosition( 96, 64 ).SetSize( 169, 0 );
    Result.cbJoy2.Color := clWindow;
            Result.cbJoy2.Items[ 0 ] := 'Kempston';
            Result.cbJoy2.Items[ 1 ] := 'Sinclair I (6789 0)';
            Result.cbJoy2.Items[ 2 ] := 'Sinclair II (1234 5)';
            Result.cbJoy2.Items[ 3 ] := 'Fuller Box';
            Result.cbJoy2.Items[ 4 ] := 'Cursor (5678 0)';
            Result.cbJoy2.Items[ 5 ] := 'Custom only';
            Result.cbJoy2.CurIndex := 2;
    // Result.chkInvertY2.TabOrder = 3
            Result.chkInvertY2 := NewCheckBox( Result.grpJoy, 'Invert Y Axe' ).SetPosition( 280, 64 ).AutoSize( TRUE );
            Result.chkInvertY2.Tag := 2;
    // Result.cKempstonMouse.TabOrder = 3
          Result.cKempstonMouse := NewCheckBox( Result.pnCfgJoystick, 'Kempston Mouse Support' ).SetPosition( 24, 248 ).AutoSize( TRUE );
          Result.cKempstonMouse.Checked := TRUE;
    // Result.cAMXMouse.TabOrder = 4
          Result.cAMXMouse := NewCheckBox( Result.pnCfgJoystick, 'AMX Mouse Support' ).SetPosition( 24, 272 ).AutoSize( TRUE );
          Result.cAMXMouse.Checked := TRUE;
    // Result.cAYMouse.TabOrder = 5
          Result.cAYMouse := NewCheckBox( Result.pnCfgJoystick, 'AY Mouse Support' ).SetPosition( 24, 296 ).AutoSize( TRUE );
          Result.cAYMouse.Checked := TRUE;
    // Result.Button3.TabOrder = 6
          Result.Button3 := NewButton( Result.pnCfgJoystick, 'Set As Default' ).SetPosition( 384, 8 ).SetSize( 121, 0 );
    // Result.Panel7.TabOrder = 7
          Result.Panel7 := NewPanel( Result.pnCfgJoystick, esLowered ).SetPosition( 8, 240 ).SetSize( 505, 2 );
    // Result.ckJoyOnAlways.TabOrder = 8
          Result.ckJoyOnAlways := NewCheckBox( Result.pnCfgJoystick, 'Joystick(s) on at start of emulator' ).SetPosition( 8, 184 ).AutoSize( TRUE );
    // Result.TC.Pages[ 2 ].TabOrder = 2
    // Result.pnCfgColors.TabOrder = 0
        Result.pnCfgColors := NewPanel( Result.TC.Pages[ 2 ], esNone ).SetAlign ( caClient );
        Result.pnCfgColors.Visible := False;
    // Result.Panel3.TabOrder = 0
          Result.Panel3 := NewPanel( Result.pnCfgColors, esNone ).SetPosition( 26, 35 ).SetSize( 487, 284 );
    // Result.Label4.TabOrder = -1
            Result.Label4 := NewLabel( Result.Panel3, 'G' ).SetPosition( 8, 229 ).AutoSize( TRUE );
    // Result.Label5.TabOrder = -1
            Result.Label5 := NewLabel( Result.Panel3, 'B' ).SetPosition( 8, 261 ).AutoSize( TRUE );
    // Result.Label1.TabOrder = -1
            Result.Label1 := NewLabel( Result.Panel3, 'Normal Intensivity:' ).SetPosition( 8, 20 ).AutoSize( TRUE );
    // Result.Label2.TabOrder = -1
            Result.Label2 := NewLabel( Result.Panel3, 'Bright Intensivity:' ).SetPosition( 8, 104 ).AutoSize( TRUE );
    // Result.Label3.TabOrder = -1
            Result.Label3 := NewLabel( Result.Panel3, 'R' ).SetPosition( 8, 197 ).AutoSize( TRUE );
    // Result.pNormalBlack.TabOrder = 0
            Result.pNormalBlack := NewPanel( Result.Panel3, esRaised ).SetPosition( 4, 40 ).SetSize( 57, 57 );
    Result.pNormalBlack.Font.FontHeight := 14;
    Result.pNormalBlack.TextAlign := taCenter;
            Result.pNormalBlack.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pNormalBlack.Caption := 'BLACK';
    // Result.qNormalBlack.TabOrder = 0
              Result.qNormalBlack := NewPanel( Result.pNormalBlack, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
    // Result.pNormalBlue.TabOrder = 1
            Result.pNormalBlue := NewPanel( Result.Panel3, esRaised ).SetPosition( 64, 40 ).SetSize( 57, 57 );
            Result.pNormalBlue.Tag := 1;
    Result.pNormalBlue.Font.FontHeight := 14;
    Result.pNormalBlue.TextAlign := taCenter;
            Result.pNormalBlue.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pNormalBlue.Caption := 'BLUE';
    // Result.qNormalBlue.TabOrder = 0
              Result.qNormalBlue := NewPanel( Result.pNormalBlue, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qNormalBlue.Tag := 1;
    // Result.pNormalRed.TabOrder = 2
            Result.pNormalRed := NewPanel( Result.Panel3, esRaised ).SetPosition( 124, 40 ).SetSize( 57, 57 );
            Result.pNormalRed.Tag := 2;
    Result.pNormalRed.Font.FontHeight := 14;
    Result.pNormalRed.TextAlign := taCenter;
            Result.pNormalRed.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pNormalRed.Caption := 'RED';
    // Result.qNormalRed.TabOrder = 0
              Result.qNormalRed := NewPanel( Result.pNormalRed, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qNormalRed.Tag := 2;
    // Result.pNormalMagenta.TabOrder = 3
            Result.pNormalMagenta := NewPanel( Result.Panel3, esRaised ).SetPosition( 184, 40 ).SetSize( 57, 57 );
            Result.pNormalMagenta.Tag := 3;
    Result.pNormalMagenta.Font.FontHeight := 14;
    Result.pNormalMagenta.TextAlign := taCenter;
            Result.pNormalMagenta.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pNormalMagenta.Caption := 'MAGENTA';
    // Result.qNormalMagenta.TabOrder = 0
              Result.qNormalMagenta := NewPanel( Result.pNormalMagenta, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qNormalMagenta.Tag := 3;
    // Result.pNormalGreen.TabOrder = 4
            Result.pNormalGreen := NewPanel( Result.Panel3, esRaised ).SetPosition( 244, 40 ).SetSize( 57, 57 );
            Result.pNormalGreen.Tag := 4;
    Result.pNormalGreen.Font.FontHeight := 14;
    Result.pNormalGreen.TextAlign := taCenter;
            Result.pNormalGreen.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pNormalGreen.Caption := 'GREEN';
    // Result.qNormalGreen.TabOrder = 0
              Result.qNormalGreen := NewPanel( Result.pNormalGreen, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qNormalGreen.Tag := 4;
    // Result.pNormalCyan.TabOrder = 5
            Result.pNormalCyan := NewPanel( Result.Panel3, esRaised ).SetPosition( 304, 40 ).SetSize( 57, 57 );
            Result.pNormalCyan.Tag := 5;
    Result.pNormalCyan.Font.FontHeight := 14;
    Result.pNormalCyan.TextAlign := taCenter;
            Result.pNormalCyan.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pNormalCyan.Caption := 'CYAN';
    // Result.qNormalCyan.TabOrder = 0
              Result.qNormalCyan := NewPanel( Result.pNormalCyan, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qNormalCyan.Tag := 5;
    // Result.pNormalYellow.TabOrder = 6
            Result.pNormalYellow := NewPanel( Result.Panel3, esRaised ).SetPosition( 364, 40 ).SetSize( 57, 57 );
            Result.pNormalYellow.Tag := 6;
    Result.pNormalYellow.Font.FontHeight := 14;
    Result.pNormalYellow.TextAlign := taCenter;
            Result.pNormalYellow.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pNormalYellow.Caption := 'YELLOW';
    // Result.qNormalYellow.TabOrder = 0
              Result.qNormalYellow := NewPanel( Result.pNormalYellow, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qNormalYellow.Tag := 6;
    // Result.pNormalWhite.TabOrder = 7
            Result.pNormalWhite := NewPanel( Result.Panel3, esRaised ).SetPosition( 424, 40 ).SetSize( 57, 57 );
            Result.pNormalWhite.Tag := 7;
    Result.pNormalWhite.Font.FontHeight := 14;
    Result.pNormalWhite.TextAlign := taCenter;
            Result.pNormalWhite.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pNormalWhite.Caption := 'WHITE';
    // Result.qNormalWhite.TabOrder = 0
              Result.qNormalWhite := NewPanel( Result.pNormalWhite, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qNormalWhite.Tag := 7;
    // Result.pBrightBlack.TabOrder = 8
            Result.pBrightBlack := NewPanel( Result.Panel3, esRaised ).SetPosition( 4, 124 ).SetSize( 57, 57 );
            Result.pBrightBlack.Tag := 8;
    Result.pBrightBlack.Font.FontHeight := 14;
    Result.pBrightBlack.TextAlign := taCenter;
            Result.pBrightBlack.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pBrightBlack.Caption := 'BLACK';
    // Result.qBrightBlack.TabOrder = 0
              Result.qBrightBlack := NewPanel( Result.pBrightBlack, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qBrightBlack.Tag := 8;
    // Result.pBrightBlue.TabOrder = 9
            Result.pBrightBlue := NewPanel( Result.Panel3, esRaised ).SetPosition( 64, 124 ).SetSize( 57, 57 );
            Result.pBrightBlue.Tag := 9;
    Result.pBrightBlue.Font.FontHeight := 14;
    Result.pBrightBlue.TextAlign := taCenter;
            Result.pBrightBlue.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pBrightBlue.Caption := 'BLUE';
    // Result.qBrightBlue.TabOrder = 0
              Result.qBrightBlue := NewPanel( Result.pBrightBlue, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qBrightBlue.Tag := 9;
    // Result.pBrightRed.TabOrder = 10
            Result.pBrightRed := NewPanel( Result.Panel3, esRaised ).SetPosition( 124, 124 ).SetSize( 57, 57 );
            Result.pBrightRed.Tag := 10;
    Result.pBrightRed.Font.FontHeight := 14;
    Result.pBrightRed.TextAlign := taCenter;
            Result.pBrightRed.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pBrightRed.Caption := 'RED';
    // Result.qBrightRed.TabOrder = 0
              Result.qBrightRed := NewPanel( Result.pBrightRed, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qBrightRed.Tag := 10;
    // Result.pBrightMagenta.TabOrder = 11
            Result.pBrightMagenta := NewPanel( Result.Panel3, esRaised ).SetPosition( 184, 124 ).SetSize( 57, 57 );
            Result.pBrightMagenta.Tag := 11;
    Result.pBrightMagenta.Font.FontHeight := 14;
    Result.pBrightMagenta.TextAlign := taCenter;
            Result.pBrightMagenta.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pBrightMagenta.Caption := 'MAGENTA';
    // Result.qBrightMagenta.TabOrder = 0
              Result.qBrightMagenta := NewPanel( Result.pBrightMagenta, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qBrightMagenta.Tag := 11;
    // Result.pBrightGreen.TabOrder = 12
            Result.pBrightGreen := NewPanel( Result.Panel3, esRaised ).SetPosition( 244, 124 ).SetSize( 57, 57 );
            Result.pBrightGreen.Tag := 12;
    Result.pBrightGreen.Font.FontHeight := 14;
    Result.pBrightGreen.TextAlign := taCenter;
            Result.pBrightGreen.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pBrightGreen.Caption := 'GREEN';
    // Result.qBrightGreen.TabOrder = 0
              Result.qBrightGreen := NewPanel( Result.pBrightGreen, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qBrightGreen.Tag := 12;
    // Result.pBrightCyan.TabOrder = 13
            Result.pBrightCyan := NewPanel( Result.Panel3, esRaised ).SetPosition( 304, 124 ).SetSize( 57, 57 );
            Result.pBrightCyan.Tag := 13;
    Result.pBrightCyan.Font.FontHeight := 14;
    Result.pBrightCyan.TextAlign := taCenter;
            Result.pBrightCyan.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pBrightCyan.Caption := 'CYAN';
    // Result.qBrightCyan.TabOrder = 0
              Result.qBrightCyan := NewPanel( Result.pBrightCyan, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qBrightCyan.Tag := 13;
    // Result.pBrightYellow.TabOrder = 14
            Result.pBrightYellow := NewPanel( Result.Panel3, esRaised ).SetPosition( 364, 124 ).SetSize( 57, 57 );
            Result.pBrightYellow.Tag := 14;
    Result.pBrightYellow.Font.FontHeight := 14;
    Result.pBrightYellow.TextAlign := taCenter;
            Result.pBrightYellow.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pBrightYellow.Caption := 'YELLOW';
    // Result.qBrightYellow.TabOrder = 0
              Result.qBrightYellow := NewPanel( Result.pBrightYellow, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qBrightYellow.Tag := 14;
    // Result.pBrightWhite.TabOrder = 15
            Result.pBrightWhite := NewPanel( Result.Panel3, esRaised ).SetPosition( 424, 124 ).SetSize( 57, 57 );
            Result.pBrightWhite.Tag := 15;
    Result.pBrightWhite.Font.FontHeight := 14;
    Result.pBrightWhite.TextAlign := taCenter;
            Result.pBrightWhite.Cursor := LoadCursor( 0, IDC_HAND );
            Result.pBrightWhite.Caption := 'WHITE';
    // Result.qBrightWhite.TabOrder = 0
              Result.qBrightWhite := NewPanel( Result.pBrightWhite, esLowered ).SetPosition( 5, 17 ).SetSize( 41, 28 );
              Result.qBrightWhite.Tag := 15;
    // Result.edR.TabOrder = 16
            Result.edR := NewEditBox( Result.Panel3, [  ] ).SetPosition( 32, 197 ).SetSize( 41, 0 );
            Result.edR.Tag := 1;
    Result.edR.Color := clWindow;
            Result.edR.Text := '0';
    // Result.edG.TabOrder = 18
            Result.edG := NewEditBox( Result.Panel3, [  ] ).SetPosition( 32, 229 ).SetSize( 41, 0 );
            Result.edG.Tag := 2;
    Result.edG.Color := clWindow;
            Result.edG.Text := '0';
    // Result.edB.TabOrder = 20
            Result.edB := NewEditBox( Result.Panel3, [  ] ).SetPosition( 32, 261 ).SetSize( 41, 0 );
            Result.edB.Tag := 3;
    Result.edB.Color := clWindow;
            Result.edB.Text := '0';
    // Result.Toolbar2.TabOrder = 4
          Result.Toolbar2 := NewToolbar( Result.pnCfgColors, caTop, [tboNoDivider], THandle( -1 ), [ '-', '-', '-', 'Open', 'Save', '-', 'Restore Standard', 'Restore All Standard', '-', 'Set As Default' ], [ -2, -2, -2, 7, 8, -2, -2, -2, -2, -2 ] ).SetAlign ( caTop );
            Result.Toolbar2.TBAssignEvents( 3, [ Result.Toolbar2TBCMapOpenClick, Result.Toolbar2TBCMapSaveClick, nil, Result.Toolbar2TBCMapRestoreClick, Result.Toolbar2TBCMapRestoreAllClick, nil, Result.Toolbar2TBCMapSetDefaultClick ] );
    // Result.TC.Pages[ 3 ].TabOrder = 3
    // Result.pnCfgEmulation.TabOrder = 2
        Result.pnCfgEmulation := NewPanel( Result.TC.Pages[ 3 ], esNone ).SetAlign ( caClient );
    // Result.Label12.TabOrder = -1
          Result.Label12 := NewWordWrapLabel( Result.pnCfgEmulation, ' Note: it is like Fast LDIR/LDDR/CPIR/CPDR emulation above, but works also in Multicolor.' ).SetPosition( 16, 192 ).SetSize( 361, 41 );
    // Result.Label21.TabOrder = -1
          Result.Label21 := NewWordWrapLabel( Result.pnCfgEmulation, ' Note: both options above have not effect when the Debugger window is visible even.' ).SetPosition( 16, 232 ).SetSize( 361, 41 );
    // Result.Label11.TabOrder = -1
          Result.Label11 := NewWordWrapLabel( Result.pnCfgEmulation, ' Note: When Multicolor On, this option is not used and LDIR/LDDR/CPIR/CPDR are always slow.' ).SetPosition( 16, 104 ).SetSize( 361, 41 );
    // Result.Label9.TabOrder = -1
          Result.Label9 := NewWordWrapLabel( Result.pnCfgEmulation, 'Note: in EmuZWin, fast LDIR/LDDR/CPIR/CPDR emulation does not affect emulation reliability at all, so it can be turned on always. This can leave more time to other tasks executing on your PC.' ).SetPosition( 16, 32 ).SetSize( 361, 73 );
    // Result.chkFastLDIR.TabOrder = 0
          Result.chkFastLDIR := NewCheckBox( Result.pnCfgEmulation, 'Fast LDIR/LDDR/CPIR/CPDR emulation On' ).SetPosition( 8, 8 ).AutoSize( TRUE );
    // Result.chkFastHALT.TabOrder = 1
          Result.chkFastHALT := NewCheckBox( Result.pnCfgEmulation, 'Fast HALT emulation On' ).SetPosition( 8, 160 ).AutoSize( TRUE );
    // Result.chkReanimate.TabOrder = 2
          Result.chkReanimate := NewCheckBox( Result.pnCfgEmulation, 'Reanimate program when HALT detected and Interrupts are disabled' ).SetPosition( 8, 280 ).AutoSize( TRUE );
          Result.chkReanimate.Checked := TRUE;
    // Result.Button2.TabOrder = 3
          Result.Button2 := NewButton( Result.pnCfgEmulation, 'Set As Default' ).SetPosition( 396, 8 ).SetSize( 129, 0 );
    // Result.TC.Pages[ 4 ].TabOrder = 4
    // Result.pnCfgSnd.TabOrder = 2
        Result.pnCfgSnd := NewPanel( Result.TC.Pages[ 4 ], esNone ).SetAlign ( caClient );
    // Result.gbSound.TabOrder = 0
          Result.gbSound := NewGroupBox( Result.pnCfgSnd, ' Sound Configuration' ).SetPosition( 16, 0 ).SetSize( 505, 318 );
    Result.gbSound.TabStop := FALSE;
    // Result.L_AY_Pitch.TabOrder = -1
            Result.L_AY_Pitch := NewLabel( Result.gbSound, 'AY Pitch:' ).SetPosition( 16, 168 ).AutoSize( TRUE );
    // Result.Label46.TabOrder = -1
            Result.Label46 := NewLabel( Result.gbSound, 'AY Noise Pitch:' ).SetPosition( 16, 220 ).AutoSize( TRUE );
    // Result.Label45.TabOrder = -1
            Result.Label45 := NewWordWrapLabel( Result.gbSound, '(Uncheck only for old slow machines like Pentium-100)' ).SetPosition( 256, 232 ).SetSize( 233, 33 );
    // Result.Label10.TabOrder = -1
            Result.Label10 := NewLabel( Result.gbSound, 'Sound Volume:' ).SetPosition( 256, 160 ).AutoSize( TRUE );
    // Result.chkSoundOn.TabOrder = 0
            Result.chkSoundOn := NewCheckBox( Result.gbSound, 'Sound On' ).SetPosition( 16, 24 ).AutoSize( TRUE );
            Result.chkSoundOn.Checked := TRUE;
    // Result.chkAYon.TabOrder = 1
            Result.chkAYon := NewCheckBox( Result.gbSound, 'AY emulation' ).SetPosition( 104, 24 ).AutoSize( TRUE );
            Result.chkAYon.Checked := TRUE;
    // Result.ckCovox.TabOrder = 2
            Result.ckCovox := NewCheckBox( Result.gbSound, 'Covox' ).SetPosition( 208, 24 ).AutoSize( TRUE );
            Result.ckCovox.Checked := TRUE;
    // Result.chkMIC_On.TabOrder = 3
            Result.chkMIC_On := NewCheckBox( Result.gbSound, 'MIC Sound' ).SetPosition( 272, 24 ).AutoSize( TRUE );
            Result.chkMIC_On.Checked := TRUE;
    // Result.GroupBox2.TabOrder = 4
            Result.GroupBox2 := NewGroupBox( Result.gbSound, 'AY Stereo :' ).SetPosition( 16, 48 ).SetSize( 233, 105 );
    Result.GroupBox2.TabStop := FALSE;
    // Result.rACB.TabOrder = 0
              Result.rACB := NewRadioBox( Result.GroupBox2, 'ACB' ).SetPosition( 16, 24 ).AutoSize( TRUE );
              Result.rACB.SetRadioChecked;
    // Result.rABC.TabOrder = 1
              Result.rABC := NewRadioBox( Result.GroupBox2, 'ABC' ).SetPosition( 80, 24 ).AutoSize( TRUE );
    // Result.rMono.TabOrder = 2
              Result.rMono := NewRadioBox( Result.GroupBox2, 'Mono' ).SetPosition( 144, 24 ).AutoSize( TRUE );
    // Result.chkAYLRInterference.TabOrder = 3
              Result.chkAYLRInterference := NewCheckBox( Result.GroupBox2, 'L/R Channels Interference' ).SetPosition( 16, 48 ).AutoSize( TRUE );
              Result.chkAYLRInterference.Checked := TRUE;
    // Result.chkDblCenter.TabOrder = 4
              Result.chkDblCenter := NewCheckBox( Result.GroupBox2, 'Double Loud Center Channel' ).SetPosition( 16, 72 ).AutoSize( TRUE );
    // Result.GroupBox1.TabOrder = 5
            Result.GroupBox1 := NewGroupBox( Result.gbSound, 'Output device :' ).SetPosition( 256, 48 ).SetSize( 233, 105 );
    Result.GroupBox1.TabStop := FALSE;
    // Result.rbDirectX.TabOrder = 0
              Result.rbDirectX := NewRadioBox( Result.GroupBox1, 'DirectX sound' ).SetPosition( 8, 24 ).AutoSize( TRUE );
              Result.rbDirectX.SetRadioChecked;
    // Result.rbWaveMapper.TabOrder = 1
              Result.rbWaveMapper := NewRadioBox( Result.GroupBox1, 'Wave Mapper' ).SetPosition( 128, 80 ).SetSize( 105, 20 );
              Result.rbWaveMapper.Visible := False;
    // Result.rbPCSpeaker.TabOrder = 2
              Result.rbPCSpeaker := NewRadioBox( Result.GroupBox1, 'PC Speaker (Windows 9x only)' ).SetPosition( 8, 80 ).AutoSize( TRUE );
    // Result.cbSoundMode.TabOrder = 3
              Result.cbSoundMode := NewComboBox( Result.GroupBox1, [ coReadOnly, coNoIntegralHeight ] ).SetPosition( 24, 48 ).SetSize( 193, 0 );
    Result.cbSoundMode.Color := clWindow;
              Result.cbSoundMode.Items[ 0 ] := ' 44KHz 16bit';
              Result.cbSoundMode.Items[ 1 ] := ' 22KHz 16bit';
              Result.cbSoundMode.Items[ 2 ] := ' 11KHz 16bit';
              Result.cbSoundMode.Items[ 3 ] := ' 8KHz   16bit';
              Result.cbSoundMode.Items[ 4 ] := ' 44KHz 8bit';
              Result.cbSoundMode.Items[ 5 ] := ' 22KHz 8bit';
              Result.cbSoundMode.Items[ 6 ] := ' 11KHz 8bit';
              Result.cbSoundMode.Items[ 7 ] := ' 8KHz   8bit';
              Result.cbSoundMode.CurIndex := 0;
    // Result.ckAnotherChip.TabOrder = 6
            Result.ckAnotherChip := NewCheckBox( Result.gbSound, 'Another chip' ).SetPosition( 144, 160 ).AutoSize( TRUE );
    // Result.thumbAYpitch.TabOrder = 7
            Result.thumbAYpitch := NewBitBtn( Result.gbSound, '', [ bboImageList, bboNoBorder, bboNoCaption ], glyphLeft, Result.IL_Thumb.Handle, 0 ).SetPosition( 72, 185 ).SetSize( 16, 16 );
            Result.thumbAYpitch.Cursor := LoadCursor( 0, IDC_HAND );
            Result.thumbAYpitch.TextShiftX := 1;
            Result.thumbAYpitch.TextShiftY := 1;
    // Result.Button17.TabOrder = 8
            Result.Button17 := NewButton( Result.gbSound, 'Reset AY Pitch' ).SetPosition( 144, 182 ).SetSize( 105, 0 );
    // Result.chkSndCtlInStatus.TabOrder = 9
            Result.chkSndCtlInStatus := NewCheckBox( Result.gbSound, 'Show in status bar' ).SetPosition( 360, 160 ).AutoSize( TRUE );
            Result.chkSndCtlInStatus.Checked := TRUE;
    // Result.thumbAYvolume.TabOrder = 10
            Result.thumbAYvolume := NewBitBtn( Result.gbSound, '', [ bboImageList, bboNoBorder, bboNoCaption ], glyphLeft, Result.IL_Thumb.Handle, 0 ).SetPosition( 365, 185 ).SetSize( 16, 16 );
            Result.thumbAYvolume.Cursor := LoadCursor( 0, IDC_HAND );
            Result.thumbAYvolume.TextShiftX := 1;
            Result.thumbAYvolume.TextShiftY := 1;
    // Result.cbNoise.TabOrder = 11
            Result.cbNoise := NewComboBox( Result.gbSound, [ coReadOnly, coNoIntegralHeight ] ).SetPosition( 120, 218 ).SetSize( 49, 0 );
    Result.cbNoise.Color := clWindow;
            Result.cbNoise.Items[ 0 ] := ' :16';
            Result.cbNoise.Items[ 1 ] := ' :8';
            Result.cbNoise.Items[ 2 ] := ' :4';
            Result.cbNoise.Items[ 3 ] := ' :2';
            Result.cbNoise.Items[ 4 ] := 'x1';
            Result.cbNoise.Items[ 5 ] := 'x2';
            Result.cbNoise.Items[ 6 ] := 'x4';
            Result.cbNoise.Items[ 7 ] := 'x8';
            Result.cbNoise.Items[ 8 ] := 'x16';
            Result.cbNoise.CurIndex := 4;
    // Result.ckExactSound.TabOrder = 12
            Result.ckExactSound := NewCheckBox( Result.gbSound, 'Exact Sound Emulation' ).SetPosition( 256, 212 ).AutoSize( TRUE );
            Result.ckExactSound.Checked := TRUE;
    // Result.cSndPlugin.TabOrder = 13
            Result.cSndPlugin := NewCheckBox( Result.gbSound, 'Output AY using plugin selected:' ).SetPosition( 16, 252 ).AutoSize( TRUE );
    // Result.LVSndPlugin.TabOrder = 14
            Result.LVSndPlugin := NewListView( Result.gbSound, lvsDetailNoHeader, [  ], nil, nil, nil ).SetPosition( 16, 276 ).SetSize( 473, 33 );
    Result.LVSndPlugin.Color := clWindow;
            Result.LVSndPlugin.LVColAdd( '1', taLeft, 460);
    // Result.pnAYPitch.TabOrder = 15
            Result.pnAYPitch := NewPanel( Result.gbSound, esLowered ).SetPosition( 16, 191 ).SetSize( 121, 4 );
    // Result.pnAYVolume.TabOrder = 15
            Result.pnAYVolume := NewPanel( Result.gbSound, esLowered ).SetPosition( 256, 191 ).SetSize( 232, 4 );
    // Result.TC.Pages[ 5 ].TabOrder = 5
    // Result.pnVideo.TabOrder = 2
        Result.pnVideo := NewPanel( Result.TC.Pages[ 5 ], esNone ).SetAlign ( caClient );
    // Result.GroupBox6.TabOrder = 0
          Result.GroupBox6 := NewGroupBox( Result.pnVideo, ' Video Configuration ' ).SetPosition( 16, 2 ).SetSize( 505, 175 );
    Result.GroupBox6.TabStop := FALSE;
    // Result.ckDXVideoFullScreen.TabOrder = 0
            Result.ckDXVideoFullScreen := NewCheckBox( Result.GroupBox6, 'Use DirectX in full-screen mode' ).SetPosition( 16, 24 ).AutoSize( TRUE );
            Result.ckDXVideoFullScreen.Checked := TRUE;
    // Result.ckDXLeds.TabOrder = 1
            Result.ckDXLeds := NewCheckBox( Result.GroupBox6, 'Show Led Status in Direct-X full-screen mode' ).SetPosition( 16, 48 ).AutoSize( TRUE );
    // Result.ckDXMaxBorder.TabOrder = 2
            Result.ckDXMaxBorder := NewCheckBox( Result.GroupBox6, 'Maximum available Border in Direct-X full-screen mode' ).SetPosition( 16, 72 ).AutoSize( TRUE );
            Result.ckDXMaxBorder.Checked := TRUE;
    // Result.ckSmoothDraw.TabOrder = 3
            Result.ckSmoothDraw := NewCheckBox( Result.GroupBox6, 'Smooth draw (both in GUI and DirectX. If not checked, synchronize by sound)' ).SetPosition( 16, 96 ).AutoSize( TRUE );
            Result.ckSmoothDraw.Checked := TRUE;
    // Result.ckAllowSkipFrames.TabOrder = 4
            Result.ckAllowSkipFrames := NewCheckBox( Result.GroupBox6, 'Allow skip frames (both in GUI and DirectX)' ).SetPosition( 16, 120 ).AutoSize( TRUE );
            Result.ckAllowSkipFrames.Checked := TRUE;
    // Result.ckDXVSync.TabOrder = 5
            Result.ckDXVSync := NewCheckBox( Result.GroupBox6, 'Synchronize with Vertical Blank in Direct-X full-screen mode' ).SetPosition( 16, 144 ).AutoSize( TRUE );
    // Result.GroupBox3.TabOrder = 1
          Result.GroupBox3 := NewGroupBox( Result.pnVideo, ' Desktop animation ' ).SetPosition( 16, 181 ).SetSize( 505, 140 );
    Result.GroupBox3.TabStop := FALSE;
    // Result.Label53.TabOrder = -1
            Result.Label53 := NewWordWrapLabel( Result.GroupBox3, 'When checked, taskbar zoom/minimize animation is disabling for all windows. This prevents the emulator from breaking its sound playback while minimizing and restoring windows.' ).SetPosition( 16, 48 ).SetSize( 481, 57 );
    // Result.ckDesktopAnimation.TabOrder = 0
            Result.ckDesktopAnimation := NewCheckBox( Result.GroupBox3, 'Disable animation effects while running' ).SetPosition( 16, 24 ).AutoSize( TRUE );
            Result.ckDesktopAnimation.Checked := TRUE;
    // Result.ckDisableScreenSaver.TabOrder = 1
            Result.ckDisableScreenSaver := NewCheckBox( Result.GroupBox3, 'Disable start screensaver while running' ).SetPosition( 16, 104 ).AutoSize( TRUE );
    // Result.TC.Pages[ 6 ].TabOrder = 6
    // Result.pnMulticolor.TabOrder = 2
        Result.pnMulticolor := NewPanel( Result.TC.Pages[ 6 ], esNone ).SetAlign ( caClient );
        Result.pnMulticolor.Border := 0;
        Result.pnMulticolor.Visible := False;
    // Result.chkContendedON.TabOrder = 0
          Result.chkContendedON := NewCheckBox( Result.pnMulticolor, 'Contended Memory ON' ).SetPosition( 16, 8 ).AutoSize( TRUE );
          Result.chkContendedON.Checked := TRUE;
    // Result.Button5.TabOrder = 1
          Result.Button5 := NewButton( Result.pnMulticolor, 'Set As Default' ).SetPosition( 396, 8 ).SetSize( 129, 0 );
    // Result.gbContended.TabOrder = 2
          Result.gbContended := NewGroupBox( Result.pnMulticolor, ' Contended Memory Banks ' ).SetPosition( 16, 32 ).SetSize( 509, 289 );
    Result.gbContended.TabStop := FALSE;
          Result.gbContended.Border := 2;
    // Result.Label19.TabOrder = -1
            Result.Label19 := NewLabel( Result.gbContended, 'Model:' ).SetPosition( 17, 28 ).AutoSize( TRUE );
    // Result.cbContendedModel.TabOrder = 0
            Result.cbContendedModel := NewComboBox( Result.gbContended, [ coReadOnly, coNoIntegralHeight ] ).SetPosition( 64, 24 ).SetSize( 145, 0 );
    Result.cbContendedModel.Color := clWindow;
            Result.cbContendedModel.Enabled := False;
            Result.cbContendedModel.Items[ 0 ] := 'Spectrum 48';
            Result.cbContendedModel.Items[ 1 ] := 'Spectrum 128';
            Result.cbContendedModel.Items[ 2 ] := 'Spectrum 128/+2';
            Result.cbContendedModel.Items[ 3 ] := 'Spectrum 128/+2A/+3';
            Result.cbContendedModel.Items[ 4 ] := 'Pentagon';
            Result.cbContendedModel.Items[ 5 ] := 'Scorpion';
            Result.cbContendedModel.Items[ 6 ] := 'Custom';
            Result.cbContendedModel.CurIndex := 0;
    // Result.rbContendedDefault.TabOrder = 1
            Result.rbContendedDefault := NewRadioBox( Result.gbContended, 'Default' ).SetPosition( 224, 24 ).AutoSize( TRUE );
    // Result.rbContendedCustom.TabOrder = 2
            Result.rbContendedCustom := NewRadioBox( Result.gbContended, 'Custom' ).SetPosition( 296, 24 ).AutoSize( TRUE );
    // Result.btApplyContended.TabOrder = 3
            Result.btApplyContended := NewButton( Result.gbContended, 'Apply' ).SetPosition( 382, 24 ).SetSize( 116, 0 );
            Result.btApplyContended.Enabled := False;
    // Result.pnContendedOptions.TabOrder = 4
            Result.pnContendedOptions := NewPanel( Result.gbContended, esLowered ).SetPosition( 16, 58 ).SetSize( 481, 215 );
            Result.pnContendedOptions.Enabled := False;
    // Result.DelaySequence.TabOrder = -1
              Result.DelaySequence := NewLabel( Result.pnContendedOptions, 'ULA delays:' ).SetPosition( 255, 155 ).AutoSize( TRUE );
    // Result.Label17.TabOrder = -1
              Result.Label17 := NewLabel( Result.pnContendedOptions, 'ULA buffer (TStates):' ).SetPosition( 15, 179 ).AutoSize( TRUE );
    // Result.lContendedRAMBanks.TabOrder = -1
              Result.lContendedRAMBanks := NewLabel( Result.pnContendedOptions, 'Contended banks && ports:' ).SetPosition( 255, 51 ).AutoSize( TRUE );
              Result.lContendedRAMBanks.Enabled := False;
    // Result.Label54.TabOrder = -1
              Result.Label54 := NewLabel( Result.pnContendedOptions, 'Border granularity:' ).SetPosition( 359, 155 ).AutoSize( TRUE );
    // Result.Label16.TabOrder = -1
              Result.Label16 := NewLabel( Result.pnContendedOptions, 'T-states before paper:' ).SetPosition( 15, 147 ).AutoSize( TRUE );
    // Result.Label15.TabOrder = -1
              Result.Label15 := NewLabel( Result.pnContendedOptions, 'T-states before Int:' ).SetPosition( 15, 115 ).AutoSize( TRUE );
    // Result.Label14.TabOrder = -1
              Result.Label14 := NewLabel( Result.pnContendedOptions, 'T-states per frame:' ).SetPosition( 15, 83 ).AutoSize( TRUE );
    // Result.Label18.TabOrder = -1
              Result.Label18 := NewLabel( Result.pnContendedOptions, 'Lines per frame:' ).SetPosition( 15, 51 ).AutoSize( TRUE );
    // Result.Label20.TabOrder = -1
              Result.Label20 := NewLabel( Result.pnContendedOptions, 'Emulate:' ).SetPosition( 423, 54 ).AutoSize( TRUE );
    // Result.Label13.TabOrder = -1
              Result.Label13 := NewLabel( Result.pnContendedOptions, 'T-states per line:' ).SetPosition( 15, 19 ).AutoSize( TRUE );
    // Result.cbTstatesPerLine.TabOrder = 0
              Result.cbTstatesPerLine := NewComboBox( Result.pnContendedOptions, [ coReadOnly, coNoIntegralHeight ] ).SetPosition( 151, 15 ).SetSize( 83, 0 );
    Result.cbTstatesPerLine.Color := clWindow;
              Result.cbTstatesPerLine.Enabled := False;
              Result.cbTstatesPerLine.Items[ 0 ] := '224';
              Result.cbTstatesPerLine.Items[ 1 ] := '228';
              Result.cbTstatesPerLine.CurIndex := 0;
    // Result.edLinesPerFrame.TabOrder = 1
              Result.edLinesPerFrame := NewEditBox( Result.pnContendedOptions, [  ] ).SetPosition( 151, 47 ).SetSize( 57, 0 );
    Result.edLinesPerFrame.Color := clWindow;
              Result.edLinesPerFrame.Enabled := False;
              Result.edLinesPerFrame.Text := '312';
    // Result.edTstatesPerFrame.TabOrder = 2
              Result.edTstatesPerFrame := NewEditBox( Result.pnContendedOptions, [  ] ).SetPosition( 151, 79 ).SetSize( 57, 0 );
    Result.edTstatesPerFrame.Color := clWindow;
              Result.edTstatesPerFrame.Enabled := False;
              Result.edTstatesPerFrame.Text := '69888';
    // Result.edTstatesBeforeInt.TabOrder = 3
              Result.edTstatesBeforeInt := NewEditBox( Result.pnContendedOptions, [  ] ).SetPosition( 151, 111 ).SetSize( 57, 0 );
    Result.edTstatesBeforeInt.Color := clWindow;
              Result.edTstatesBeforeInt.Enabled := False;
              Result.edTstatesBeforeInt.Text := '0';
    // Result.edTstatesBeforePaper.TabOrder = 4
              Result.edTstatesBeforePaper := NewEditBox( Result.pnContendedOptions, [  ] ).SetPosition( 151, 143 ).SetSize( 57, 0 );
    Result.edTstatesBeforePaper.Color := clWindow;
              Result.edTstatesBeforePaper.Enabled := False;
              Result.edTstatesBeforePaper.Text := '14335';
    // Result.edULABuffer.TabOrder = 5
              Result.edULABuffer := NewEditBox( Result.pnContendedOptions, [  ] ).SetPosition( 151, 175 ).SetSize( 57, 0 );
    Result.edULABuffer.Color := clWindow;
              Result.edULABuffer.Text := '6';
    // Result.Button6.TabOrder = 6
              Result.Button6 := NewButton( Result.pnContendedOptions, 'Restore Initial Settings' ).SetPosition( 255, 15 ).SetSize( 214, 0 );
              Result.Button6.Enabled := False;
    // Result.chkBank0.TabOrder = 7
              Result.chkBank0 := NewCheckBox( Result.pnContendedOptions, '0' ).SetPosition( 255, 75 ).AutoSize( TRUE );
              Result.chkBank0.Enabled := False;
    // Result.chkBank1.TabOrder = 8
              Result.chkBank1 := NewCheckBox( Result.pnContendedOptions, '1' ).SetPosition( 295, 75 ).AutoSize( TRUE );
              Result.chkBank1.Tag := 1;
              Result.chkBank1.Enabled := False;
    // Result.chkBank2.TabOrder = 9
              Result.chkBank2 := NewCheckBox( Result.pnContendedOptions, '2' ).SetPosition( 335, 75 ).AutoSize( TRUE );
              Result.chkBank2.Tag := 2;
              Result.chkBank2.Enabled := False;
    // Result.chkBank3.TabOrder = 10
              Result.chkBank3 := NewCheckBox( Result.pnContendedOptions, '3' ).SetPosition( 375, 75 ).AutoSize( TRUE );
              Result.chkBank3.Tag := 3;
              Result.chkBank3.Enabled := False;
    // Result.chkBank4.TabOrder = 11
              Result.chkBank4 := NewCheckBox( Result.pnContendedOptions, '4' ).SetPosition( 255, 99 ).AutoSize( TRUE );
              Result.chkBank4.Tag := 4;
              Result.chkBank4.Enabled := False;
    // Result.chkBank5.TabOrder = 12
              Result.chkBank5 := NewCheckBox( Result.pnContendedOptions, '5' ).SetPosition( 295, 99 ).AutoSize( TRUE );
              Result.chkBank5.Tag := 5;
              Result.chkBank5.Enabled := False;
    // Result.chkBank6.TabOrder = 13
              Result.chkBank6 := NewCheckBox( Result.pnContendedOptions, '6' ).SetPosition( 335, 99 ).AutoSize( TRUE );
              Result.chkBank6.Tag := 6;
              Result.chkBank6.Enabled := False;
    // Result.chkBank7.TabOrder = 14
              Result.chkBank7 := NewCheckBox( Result.pnContendedOptions, '7' ).SetPosition( 375, 99 ).AutoSize( TRUE );
              Result.chkBank7.Tag := 7;
              Result.chkBank7.Enabled := False;
    // Result.chkPortFE.TabOrder = 15
              Result.chkPortFE := NewCheckBox( Result.pnContendedOptions, 'in/out FE' ).SetPosition( 255, 121 ).AutoSize( TRUE );
              Result.chkPortFE.Tag := 8;
    // Result.chkPortFD.TabOrder = 16
              Result.chkPortFD := NewCheckBox( Result.pnContendedOptions, 'out 7ffd' ).SetPosition( 335, 121 ).AutoSize( TRUE );
              Result.chkPortFD.Tag := 9;
              Result.chkPortFD.Visible := False;
    // Result.chkSnow.TabOrder = 17
              Result.chkSnow := NewCheckBox( Result.pnContendedOptions, 'Snow' ).SetPosition( 423, 76 ).AutoSize( TRUE );
              Result.chkSnow.Checked := TRUE;
    // Result.chkINFF.TabOrder = 18
              Result.chkINFF := NewCheckBox( Result.pnContendedOptions, 'in FF' ).SetPosition( 423, 100 ).AutoSize( TRUE );
              Result.chkINFF.Checked := TRUE;
    // Result.chkEvenM1.TabOrder = 19
              Result.chkEvenM1 := NewCheckBox( Result.pnContendedOptions, 'Even M1' ).SetPosition( 405, 121 ).AutoSize( TRUE );
    // Result.edDelaySequence.TabOrder = 20
              Result.edDelaySequence := NewEditBox( Result.pnContendedOptions, [  ] ).SetPosition( 255, 175 ).SetSize( 97, 0 );
    Result.edDelaySequence.Color := clWindow;
              Result.edDelaySequence.Enabled := False;
              Result.edDelaySequence.Text := '6 5 4 3 2 1 0 0';
    // Result.cbBorderGranularity.TabOrder = 21
              Result.cbBorderGranularity := NewComboBox( Result.pnContendedOptions, [ coReadOnly, coNoIntegralHeight ] ).SetPosition( 359, 175 ).SetSize( 105, 0 );
    Result.cbBorderGranularity.Color := clWindow;
              Result.cbBorderGranularity.Items[ 0 ] := ' 1 TState';
              Result.cbBorderGranularity.Items[ 1 ] := ' 4 TStates';
              Result.cbBorderGranularity.CurIndex := 0;
    // Result.edFFoffset.TabOrder = 22
              Result.edFFoffset := NewEditBox( Result.pnContendedOptions, [  ] ).SetPosition( 423, 187 ).SetSize( 25, 0 );
    Result.edFFoffset.Color := clWindow;
              Result.edFFoffset.Visible := False;
              Result.edFFoffset.Text := '0';
    // Result.BitBtn6.TabOrder = 23
              Result.BitBtn6 := NewBitBtn( Result.pnContendedOptions, '>', [  ], glyphLeft, 0, 0 ).SetPosition( 220, 111 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn6.Tag := 3;
    Result.BitBtn6.TabStop := FALSE;
              Result.BitBtn6.TextShiftX := 1;
              Result.BitBtn6.TextShiftY := 1;
    // Result.BitBtn7.TabOrder = 23
              Result.BitBtn7 := NewBitBtn( Result.pnContendedOptions, '<', [  ], glyphLeft, 0, 0 ).SetPosition( 208, 47 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn7.Tag := 1;
    Result.BitBtn7.TabStop := FALSE;
              Result.BitBtn7.TextShiftX := 1;
              Result.BitBtn7.TextShiftY := 1;
    // Result.BitBtn8.TabOrder = 23
              Result.BitBtn8 := NewBitBtn( Result.pnContendedOptions, '>', [  ], glyphLeft, 0, 0 ).SetPosition( 220, 47 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn8.Tag := 1;
    Result.BitBtn8.TabStop := FALSE;
              Result.BitBtn8.TextShiftX := 1;
              Result.BitBtn8.TextShiftY := 1;
    // Result.BitBtn9.TabOrder = 23
              Result.BitBtn9 := NewBitBtn( Result.pnContendedOptions, '<', [  ], glyphLeft, 0, 0 ).SetPosition( 208, 79 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn9.Tag := 2;
    Result.BitBtn9.TabStop := FALSE;
              Result.BitBtn9.TextShiftX := 1;
              Result.BitBtn9.TextShiftY := 1;
    // Result.BitBtn10.TabOrder = 23
              Result.BitBtn10 := NewBitBtn( Result.pnContendedOptions, '>', [  ], glyphLeft, 0, 0 ).SetPosition( 220, 79 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn10.Tag := 2;
    Result.BitBtn10.TabStop := FALSE;
              Result.BitBtn10.TextShiftX := 1;
              Result.BitBtn10.TextShiftY := 1;
    // Result.BitBtn3.TabOrder = 23
              Result.BitBtn3 := NewBitBtn( Result.pnContendedOptions, '<', [  ], glyphLeft, 0, 0 ).SetPosition( 208, 143 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn3.Tag := 4;
    Result.BitBtn3.TabStop := FALSE;
              Result.BitBtn3.TextShiftX := 1;
              Result.BitBtn3.TextShiftY := 1;
    // Result.BitBtn11.TabOrder = 23
              Result.BitBtn11 := NewBitBtn( Result.pnContendedOptions, '<', [  ], glyphLeft, 0, 0 ).SetPosition( 448, 187 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn11.Tag := 1;
    Result.BitBtn11.TabStop := FALSE;
              Result.BitBtn11.Visible := False;
              Result.BitBtn11.RepeatInterval := 175;
              Result.BitBtn11.TextShiftX := 1;
              Result.BitBtn11.TextShiftY := 1;
    // Result.BitBtn1.TabOrder = 23
              Result.BitBtn1 := NewBitBtn( Result.pnContendedOptions, '<', [  ], glyphLeft, 0, 0 ).SetPosition( 208, 175 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn1.Tag := 5;
    Result.BitBtn1.TabStop := FALSE;
              Result.BitBtn1.TextShiftX := 1;
              Result.BitBtn1.TextShiftY := 1;
    // Result.BitBtn5.TabOrder = 23
              Result.BitBtn5 := NewBitBtn( Result.pnContendedOptions, '<', [  ], glyphLeft, 0, 0 ).SetPosition( 208, 111 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn5.Tag := 3;
    Result.BitBtn5.TabStop := FALSE;
              Result.BitBtn5.TextShiftX := 1;
              Result.BitBtn5.TextShiftY := 1;
    // Result.BitBtn4.TabOrder = 23
              Result.BitBtn4 := NewBitBtn( Result.pnContendedOptions, '>', [  ], glyphLeft, 0, 0 ).SetPosition( 220, 143 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn4.Tag := 4;
    Result.BitBtn4.TabStop := FALSE;
              Result.BitBtn4.TextShiftX := 1;
              Result.BitBtn4.TextShiftY := 1;
    // Result.BitBtn2.TabOrder = 23
              Result.BitBtn2 := NewBitBtn( Result.pnContendedOptions, '>', [  ], glyphLeft, 0, 0 ).SetPosition( 220, 175 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn2.Tag := 5;
    Result.BitBtn2.TabStop := FALSE;
              Result.BitBtn2.TextShiftX := 1;
              Result.BitBtn2.TextShiftY := 1;
    // Result.BitBtn12.TabOrder = 24
              Result.BitBtn12 := NewBitBtn( Result.pnContendedOptions, '>', [  ], glyphLeft, 0, 0 ).SetPosition( 460, 187 ).SetSize( 13, 0 ).LikeSpeedButton;
              Result.BitBtn12.Tag := 1;
    Result.BitBtn12.TabStop := FALSE;
              Result.BitBtn12.Visible := False;
              Result.BitBtn12.RepeatInterval := 175;
              Result.BitBtn12.TextShiftX := 1;
              Result.BitBtn12.TextShiftY := 1;
    // Result.Panel5.TabOrder = 25
              Result.Panel5 := NewPanel( Result.pnContendedOptions, esLowered ).SetPosition( 414, 52 ).SetSize( 3, 68 );
    // Result.Panel6.TabOrder = 25
              Result.Panel6 := NewPanel( Result.pnContendedOptions, esLowered ).SetPosition( 254, 149 ).SetSize( 218, 3 );
    // Result.Panel4.TabOrder = 25
              Result.Panel4 := NewPanel( Result.pnContendedOptions, esLowered ).SetPosition( 243, 77 ).SetSize( 3, 121 );
    // Result.TC.Pages[ 7 ].TabOrder = 7
    // Result.pnCfgToolbar.TabOrder = 5
        Result.pnCfgToolbar := NewPanel( Result.TC.Pages[ 7 ], esNone ).SetAlign ( caClient );
    // Result.Label24.TabOrder = -1
          Result.Label24 := NewWordWrapLabel( Result.pnCfgToolbar, 'Visible buttons on main toolbar (when appropriate):' ).SetPosition( 16, 2 ).SetSize( 225, 37 );
    // Result.LVTBButtons.TabOrder = 0
          Result.LVTBButtons := NewListView( Result.pnCfgToolbar, lvsDetailNoHeader, [ lvoRowSelect ], Form1.IL_TB1, nil, Result.IL_Checks ).SetPosition( 16, 40 ).SetSize( 409, 276 );
    Result.LVTBButtons.Color := clWindow;
          Result.LVTBButtons.LVColAdd( 'Buttons', taLeft, 200);
    // Result.ckToolbarOn.TabOrder = 1
          Result.ckToolbarOn := NewCheckBox( Result.pnCfgToolbar, 'Toolbar On' ).SetPosition( 432, 37 ).AutoSize( TRUE );
          Result.ckToolbarOn.Checked := TRUE;
    // Result.TC.Pages[ 8 ].TabOrder = 8
    // Result.pnCfgShell.TabOrder = 5
        Result.pnCfgShell := NewPanel( Result.TC.Pages[ 8 ], esNone ).SetAlign ( caClient );
    // Result.Label23.TabOrder = -1
          Result.Label23 := NewWordWrapLabel( Result.pnCfgShell, 'Provide a path to PKUNZIP.EXE to allow reading files from ZIP archive files (If a plugin PKUNZIP.DLL provided, you have not to do this). You can get the most fresh version of the PKUNZIP.EXE by this link:' ).SetPosition( 8, 56 ).SetSize( 513, 49 );
    // Result.pkunzip_url.TabOrder = -1
          Result.pkunzip_url := NewLabel( Result.pnCfgShell, 'http://www.interpages.co.uk/pkzipage/' ).SetPosition( 16, 106 ).AutoSize( TRUE );
    Result.pkunzip_url.Font.Color := clBlue;
    Result.pkunzip_url.Font.FontStyle := [ fsUnderline ];
          Result.pkunzip_url.Cursor := LoadCursor( 0, IDC_HAND );
    // Result.Label25.TabOrder = -1
          Result.Label25 := NewWordWrapLabel( Result.pnCfgShell, 'If this flag is checked, EZX-files when saved are compressed using extremely fast and efficient compression algorithm used in popular executables compressor UPX.' ).SetPosition( 8, 232 ).SetSize( 513, 41 );
    // Result.Label6.TabOrder = -1
          Result.Label6 := NewLabel( Result.pnCfgShell, 'Path To PKUNZIP.EXE:' ).SetPosition( 16, 0 ).AutoSize( TRUE );
    // Result.Label22.TabOrder = -1
          Result.Label22 := NewWordWrapLabel( Result.pnCfgShell, 'When this option is turned off, pressing F5 (or selecting menu item File|Save screenshot) does not show save dialog, and a screenshot is automatically named and saved in the same directory (usually, to the directory where the emulator is running from).' ).SetPosition( 8, 152 ).SetSize( 513, 57 );
    // Result.edPKUNZIPPath.TabOrder = 0
          Result.edPKUNZIPPath := NewEditBox( Result.pnCfgShell, [  ] ).SetPosition( 16, 24 ).SetSize( 441, 0 );
    Result.edPKUNZIPPath.Color := clWindow;
    // Result.btBrowsePKUNZIP.TabOrder = 1
          Result.btBrowsePKUNZIP := NewButton( Result.pnCfgShell, 'Browse' ).SetPosition( 462, 32 );
    // Result.chkShowScreenshotDialog.TabOrder = 2
          Result.chkShowScreenshotDialog := NewCheckBox( Result.pnCfgShell, 'Show select file dialog for Save screenshot operation (F5)' ).SetPosition( 16, 128 ).AutoSize( TRUE );
    // Result.ckCompress_EZX.TabOrder = 3
          Result.ckCompress_EZX := NewCheckBox( Result.pnCfgShell, 'Compress EZX-files' ).SetPosition( 16, 208 ).AutoSize( TRUE );
          Result.ckCompress_EZX.Checked := TRUE;
    // Result.cAutoSave.TabOrder = 4
          Result.cAutoSave := NewCheckBox( Result.pnCfgShell, 'Auto save state on exit, auto load auto saved state on start' ).SetPosition( 16, 272 ).AutoSize( TRUE );
          Result.cAutoSave.Checked := TRUE;
    // Result.cPausedAutoLoaded.TabOrder = 5
          Result.cPausedAutoLoaded := NewCheckBox( Result.pnCfgShell, 'Start paused when auto loaded from autosaved state on start' ).SetPosition( 16, 296 ).AutoSize( TRUE );
    // Result.TC.Pages[ 9 ].TabOrder = 9
    // Result.pnFileTypes.TabOrder = 5
        Result.pnFileTypes := NewPanel( Result.TC.Pages[ 9 ], esNone ).SetAlign ( caClient );
    // Result.Label26.TabOrder = -1
          Result.Label26 := NewLabel( Result.pnFileTypes, 'Associate With File Types:' ).SetPosition( 8, 8 ).AutoSize( TRUE );
    // Result.LVFileTypes.TabOrder = 0
          Result.LVFileTypes := NewListView( Result.pnFileTypes, lvsDetailNoHeader, [ lvoSortAscending, lvoRowSelect ], Result.IL_Checks, nil, nil ).SetPosition( 8, 32 ).SetSize( 385, 278 );
    Result.LVFileTypes.Color := clWindow;
          Result.LVFileTypes.LVColAdd( 'Type', taLeft, 70);
          Result.LVFileTypes.LVColAdd( 'Description', taLeft, 250);
    // Result.Button7.TabOrder = 1
          Result.Button7 := NewButton( Result.pnFileTypes, 'Apply' ).SetPosition( 408, 32 ).SetSize( 113, 0 );
    // Result.Button8.TabOrder = 2
          Result.Button8 := NewButton( Result.pnFileTypes, 'Check All' ).SetPosition( 408, 64 ).SetSize( 113, 0 );
    // Result.Button9.TabOrder = 3
          Result.Button9 := NewButton( Result.pnFileTypes, 'Uncheck All' ).SetPosition( 408, 96 ).SetSize( 113, 0 );
    // Result.TC.Pages[ 10 ].TabOrder = 10
    // Result.pnROMs.TabOrder = 1
        Result.pnROMs := NewPanel( Result.TC.Pages[ 10 ], esNone ).SetAlign ( caClient );
        Result.pnROMs.Border := 4;
        Result.pnROMs.Visible := False;
    // Result.Label30.TabOrder = -1
          Result.Label30 := NewLabel( Result.pnROMs, 'Certain ROMs configuration' ).SetAlign ( caTop ).AutoSize( TRUE );
    // Result.sBoxRoms.TabOrder = 0
          Result.sBoxRoms := NewScrollBoxEx( Result.pnROMs, esLowered ).SetAlign ( caClient );
          Result.sBoxRoms.Border := 2;
    // Result.pnLayRoms.TabOrder = 0
            Result.pnLayRoms := NewPanel( Result.sBoxRoms, esNone ).SetPosition( 2, -229 ).SetSize( 487, 632 );
    // Result.Panel9.TabOrder = 0
              Result.Panel9 := NewPanel( Result.pnLayRoms, esLowered ).SetAlign ( caTop ).SetSize( 0, 61 );
    // Result.Label32.TabOrder = -1
                Result.Label32 := NewLabel( Result.Panel9, 'Offset in file:' ).SetPosition( 319, 7 ).AutoSize( TRUE );
    // Result.Label31.TabOrder = -1
                Result.Label31 := NewLabel( Result.Panel9, 'S48 ROM (16K)' ).SetPosition( 7, 7 ).AutoSize( TRUE );
    // Result.eROMpath0.TabOrder = 0
                Result.eROMpath0 := NewEditBox( Result.Panel9, [  ] ).SetPosition( 79, 31 ).SetSize( 393, 0 );
    Result.eROMpath0.Color := clWindow;
    // Result.Button4.TabOrder = 1
                Result.Button4 := NewButton( Result.Panel9, 'Browse' ).SetPosition( 7, 31 );
    // Result.eROMoffset0.TabOrder = 2
                Result.eROMoffset0 := NewEditBox( Result.Panel9, [  ] ).SetPosition( 399, 5 ).SetSize( 73, 0 );
    Result.eROMoffset0.Color := clWindow;
                Result.eROMoffset0.Text := '0';
    // Result.Panel10.TabOrder = 1
              Result.Panel10 := NewPanel( Result.pnLayRoms, esLowered ).SetAlign ( caTop ).SetSize( 0, 61 );
              Result.Panel10.Tag := 1;
    // Result.Label34.TabOrder = -1
                Result.Label34 := NewLabel( Result.Panel10, 'Offset in file:' ).SetPosition( 319, 7 ).AutoSize( TRUE );
    // Result.Label33.TabOrder = -1
                Result.Label33 := NewLabel( Result.Panel10, 'S128 ROM (16K)' ).SetPosition( 7, 7 ).AutoSize( TRUE );
    // Result.eROMpath1.TabOrder = 0
                Result.eROMpath1 := NewEditBox( Result.Panel10, [  ] ).SetPosition( 79, 31 ).SetSize( 393, 0 );
                Result.eROMpath1.Tag := 1;
    Result.eROMpath1.Color := clWindow;
    // Result.Button10.TabOrder = 1
                Result.Button10 := NewButton( Result.Panel10, 'Browse' ).SetPosition( 7, 31 );
                Result.Button10.Tag := 1;
    // Result.eROMoffset1.TabOrder = 2
                Result.eROMoffset1 := NewEditBox( Result.Panel10, [  ] ).SetPosition( 399, 5 ).SetSize( 73, 0 );
                Result.eROMoffset1.Tag := 1;
    Result.eROMoffset1.Color := clWindow;
                Result.eROMoffset1.Text := '0';
    // Result.Panel11.TabOrder = 2
              Result.Panel11 := NewPanel( Result.pnLayRoms, esLowered ).SetAlign ( caTop ).SetSize( 0, 61 );
              Result.Panel11.Tag := 2;
    // Result.Label36.TabOrder = -1
                Result.Label36 := NewLabel( Result.Panel11, 'Offset in file:' ).SetPosition( 319, 7 ).AutoSize( TRUE );
    // Result.Label35.TabOrder = -1
                Result.Label35 := NewLabel( Result.Panel11, 'TR-DOS ROM (16K)' ).SetPosition( 7, 7 ).AutoSize( TRUE );
    // Result.eROMpath2.TabOrder = 0
                Result.eROMpath2 := NewEditBox( Result.Panel11, [  ] ).SetPosition( 79, 31 ).SetSize( 393, 0 );
                Result.eROMpath2.Tag := 2;
    Result.eROMpath2.Color := clWindow;
    // Result.Button11.TabOrder = 1
                Result.Button11 := NewButton( Result.Panel11, 'Browse' ).SetPosition( 7, 31 );
                Result.Button11.Tag := 2;
    // Result.eROMoffset2.TabOrder = 2
                Result.eROMoffset2 := NewEditBox( Result.Panel11, [  ] ).SetPosition( 399, 5 ).SetSize( 73, 0 );
                Result.eROMoffset2.Tag := 2;
    Result.eROMoffset2.Color := clWindow;
                Result.eROMoffset2.Text := '0';
    // Result.Panel12.TabOrder = 3
              Result.Panel12 := NewPanel( Result.pnLayRoms, esLowered ).SetAlign ( caTop ).SetSize( 0, 61 );
              Result.Panel12.Tag := 3;
    // Result.Label38.TabOrder = -1
                Result.Label38 := NewLabel( Result.Panel12, 'Offset in file:' ).SetPosition( 319, 7 ).AutoSize( TRUE );
    // Result.Label37.TabOrder = -1
                Result.Label37 := NewLabel( Result.Panel12, 'Interface-I ROM (8K)' ).SetPosition( 7, 7 ).AutoSize( TRUE );
    // Result.eROMpath3.TabOrder = 0
                Result.eROMpath3 := NewEditBox( Result.Panel12, [  ] ).SetPosition( 79, 31 ).SetSize( 393, 0 );
                Result.eROMpath3.Tag := 3;
    Result.eROMpath3.Color := clWindow;
    // Result.Button12.TabOrder = 1
                Result.Button12 := NewButton( Result.Panel12, 'Browse' ).SetPosition( 7, 31 );
                Result.Button12.Tag := 3;
    // Result.eROMoffset3.TabOrder = 2
                Result.eROMoffset3 := NewEditBox( Result.Panel12, [  ] ).SetPosition( 399, 5 ).SetSize( 73, 0 );
                Result.eROMoffset3.Tag := 3;
    Result.eROMoffset3.Color := clWindow;
                Result.eROMoffset3.Text := '0';
    // Result.pnGDOS.TabOrder = 4
              Result.pnGDOS := NewPanel( Result.pnLayRoms, esLowered ).SetAlign ( caTop ).SetSize( 0, 61 );
              Result.pnGDOS.Tag := 4;
    // Result.Label40.TabOrder = -1
                Result.Label40 := NewLabel( Result.pnGDOS, 'Offset in file:' ).SetPosition( 319, 7 ).AutoSize( TRUE );
    // Result.Label39.TabOrder = -1
                Result.Label39 := NewLabel( Result.pnGDOS, 'GDOS (Disciple) ROM (8K)' ).SetPosition( 7, 7 ).AutoSize( TRUE );
    // Result.eROMpath4.TabOrder = 0
                Result.eROMpath4 := NewEditBox( Result.pnGDOS, [  ] ).SetPosition( 79, 31 ).SetSize( 393, 0 );
                Result.eROMpath4.Tag := 4;
    Result.eROMpath4.Color := clWindow;
    // Result.Button13.TabOrder = 1
                Result.Button13 := NewButton( Result.pnGDOS, 'Browse' ).SetPosition( 7, 31 );
                Result.Button13.Tag := 4;
    // Result.eROMoffset4.TabOrder = 2
                Result.eROMoffset4 := NewEditBox( Result.pnGDOS, [  ] ).SetPosition( 399, 5 ).SetSize( 73, 0 );
                Result.eROMoffset4.Tag := 4;
    Result.eROMoffset4.Color := clWindow;
                Result.eROMoffset4.Text := '0';
    // Result.pnGplusDOS.TabOrder = 5
              Result.pnGplusDOS := NewPanel( Result.pnLayRoms, esLowered ).SetAlign ( caTop ).SetSize( 0, 61 );
              Result.pnGplusDOS.Tag := 5;
    // Result.Label42.TabOrder = -1
                Result.Label42 := NewLabel( Result.pnGplusDOS, 'Offset in file:' ).SetPosition( 319, 7 ).AutoSize( TRUE );
    // Result.Label41.TabOrder = -1
                Result.Label41 := NewLabel( Result.pnGplusDOS, 'G+DOS (+D) ROM (8K)' ).SetPosition( 7, 7 ).AutoSize( TRUE );
    // Result.eROMpath5.TabOrder = 0
                Result.eROMpath5 := NewEditBox( Result.pnGplusDOS, [  ] ).SetPosition( 79, 31 ).SetSize( 393, 0 );
                Result.eROMpath5.Tag := 5;
    Result.eROMpath5.Color := clWindow;
    // Result.Button14.TabOrder = 1
                Result.Button14 := NewButton( Result.pnGplusDOS, 'Browse' ).SetPosition( 7, 31 );
                Result.Button14.Tag := 5;
    // Result.eROMoffset5.TabOrder = 2
                Result.eROMoffset5 := NewEditBox( Result.pnGplusDOS, [  ] ).SetPosition( 399, 5 ).SetSize( 73, 0 );
                Result.eROMoffset5.Tag := 5;
    Result.eROMoffset5.Color := clWindow;
                Result.eROMoffset5.Text := '0';
    // Result.pnUniDOS.TabOrder = 6
              Result.pnUniDOS := NewPanel( Result.pnLayRoms, esLowered ).SetAlign ( caTop ).SetSize( 0, 61 );
              Result.pnUniDOS.Tag := 6;
    // Result.Label44.TabOrder = -1
                Result.Label44 := NewLabel( Result.pnUniDOS, 'Offset in file:' ).SetPosition( 319, 7 ).AutoSize( TRUE );
    // Result.Label43.TabOrder = -1
                Result.Label43 := NewLabel( Result.pnUniDOS, 'UniDOS (Disciple or +D) ROM (8K)' ).SetPosition( 7, 7 ).AutoSize( TRUE );
    // Result.eROMpath6.TabOrder = 0
                Result.eROMpath6 := NewEditBox( Result.pnUniDOS, [  ] ).SetPosition( 79, 31 ).SetSize( 393, 0 );
                Result.eROMpath6.Tag := 6;
    Result.eROMpath6.Color := clWindow;
    // Result.Button15.TabOrder = 1
                Result.Button15 := NewButton( Result.pnUniDOS, 'Browse' ).SetPosition( 7, 31 );
                Result.Button15.Tag := 6;
    // Result.eROMoffset6.TabOrder = 2
                Result.eROMoffset6 := NewEditBox( Result.pnUniDOS, [  ] ).SetPosition( 399, 5 ).SetSize( 73, 0 );
                Result.eROMoffset6.Tag := 6;
    Result.eROMoffset6.Color := clWindow;
                Result.eROMoffset6.Text := '0';
    // Result.Panel15.TabOrder = 7
              Result.Panel15 := NewPanel( Result.pnLayRoms, esLowered ).SetAlign ( caTop ).SetSize( 0, 61 );
              Result.Panel15.Tag := 7;
    // Result.Label48.TabOrder = -1
                Result.Label48 := NewLabel( Result.Panel15, 'Offset in file:' ).SetPosition( 319, 7 ).AutoSize( TRUE );
    // Result.Label47.TabOrder = -1
                Result.Label47 := NewLabel( Result.Panel15, 'ATM-1 ROMs: CP/M;TR-DOS;S128;S48 (64K)' ).SetPosition( 7, 7 ).AutoSize( TRUE );
    // Result.eROMPath7.TabOrder = 0
                Result.eROMPath7 := NewEditBox( Result.Panel15, [  ] ).SetPosition( 79, 31 ).SetSize( 393, 0 );
                Result.eROMPath7.Tag := 7;
    Result.eROMPath7.Color := clWindow;
    // Result.Button16.TabOrder = 1
                Result.Button16 := NewButton( Result.Panel15, 'Browse' ).SetPosition( 7, 31 );
                Result.Button16.Tag := 7;
    // Result.eROMoffset7.TabOrder = 2
                Result.eROMoffset7 := NewEditBox( Result.Panel15, [  ] ).SetPosition( 399, 5 ).SetSize( 73, 0 );
                Result.eROMoffset7.Tag := 7;
    Result.eROMoffset7.Color := clWindow;
                Result.eROMoffset7.Text := '0';
    // Result.Panel16.TabOrder = 8
              Result.Panel16 := NewPanel( Result.pnLayRoms, esLowered ).SetAlign ( caTop ).SetSize( 0, 61 );
              Result.Panel16.Tag := 8;
    // Result.Label50.TabOrder = -1
                Result.Label50 := NewLabel( Result.Panel16, 'Offset in file:' ).SetPosition( 319, 7 ).AutoSize( TRUE );
    // Result.Label49.TabOrder = -1
                Result.Label49 := NewLabel( Result.Panel16, 'ATM-2 ROMs: S48;TR-DOS;S128;CP/M (64K)' ).SetPosition( 7, 7 ).AutoSize( TRUE );
    // Result.eROMpath8.TabOrder = 0
                Result.eROMpath8 := NewEditBox( Result.Panel16, [  ] ).SetPosition( 79, 31 ).SetSize( 393, 0 );
                Result.eROMpath8.Tag := 8;
    Result.eROMpath8.Color := clWindow;
    // Result.Button18.TabOrder = 1
                Result.Button18 := NewButton( Result.Panel16, 'Browse' ).SetPosition( 7, 31 );
                Result.Button18.Tag := 8;
    // Result.eROMoffset8.TabOrder = 2
                Result.eROMoffset8 := NewEditBox( Result.Panel16, [  ] ).SetPosition( 399, 5 ).SetSize( 73, 0 );
                Result.eROMoffset8.Tag := 8;
    Result.eROMoffset8.Color := clWindow;
                Result.eROMoffset8.Text := '0';
    // Result.Panel17.TabOrder = 9
              Result.Panel17 := NewPanel( Result.pnLayRoms, esLowered ).SetAlign ( caTop ).SetSize( 0, 61 );
              Result.Panel17.Tag := 9;
    // Result.Label52.TabOrder = -1
                Result.Label52 := NewLabel( Result.Panel17, 'Offset in file:' ).SetPosition( 319, 7 ).AutoSize( TRUE );
    // Result.Label51.TabOrder = -1
                Result.Label51 := NewLabel( Result.Panel17, 'ATM-2 Text Mode Symbols Generator ROM (2K)' ).SetPosition( 7, 7 ).AutoSize( TRUE );
    // Result.eROMpath9.TabOrder = 0
                Result.eROMpath9 := NewEditBox( Result.Panel17, [  ] ).SetPosition( 79, 31 ).SetSize( 393, 0 );
                Result.eROMpath9.Tag := 9;
    Result.eROMpath9.Color := clWindow;
    // Result.Button19.TabOrder = 1
                Result.Button19 := NewButton( Result.Panel17, 'Browse' ).SetPosition( 7, 31 );
                Result.Button19.Tag := 9;
    // Result.eROMoffset9.TabOrder = 2
                Result.eROMoffset9 := NewEditBox( Result.Panel17, [  ] ).SetPosition( 399, 5 ).SetSize( 73, 0 );
                Result.eROMoffset9.Tag := 9;
    Result.eROMoffset9.Color := clWindow;
                Result.eROMoffset9.Text := '0';
    // Result.TC.Pages[ 11 ].TabOrder = 11
    // Result.pnMiscellanous.TabOrder = 3
        Result.pnMiscellanous := NewPanel( Result.TC.Pages[ 11 ], esNone ).SetAlign ( caClient );
    // Result.GroupBox4.TabOrder = 0
          Result.GroupBox4 := NewGroupBox( Result.pnMiscellanous, ' Confirmations ' ).SetPosition( 16, 8 ).SetSize( 497, 73 );
    Result.GroupBox4.TabStop := FALSE;
    // Result.chkConfirmHardwareEmulationOff.TabOrder = 0
            Result.chkConfirmHardwareEmulationOff := NewCheckBox( Result.GroupBox4, 'Confirmation on auto-switch hardware off when another (conflicting) selected' ).SetPosition( 16, 21 ).AutoSize( TRUE );
    // Result.chkShowSelMemSizDlg.TabOrder = 1
            Result.chkShowSelMemSizDlg := NewCheckBox( Result.GroupBox4, 'Show select memory size above 128K dialog for extended models' ).SetPosition( 16, 45 ).AutoSize( TRUE );
    // Result.GroupBox5.TabOrder = 1
          Result.GroupBox5 := NewGroupBox( Result.pnMiscellanous, ' Tape emulation extended options ' ).SetPosition( 16, 88 ).SetSize( 497, 77 );
    Result.GroupBox5.TabStop := FALSE;
    // Result.ckResetTapeWithSpeccy.TabOrder = 0
            Result.ckResetTapeWithSpeccy := NewCheckBox( Result.GroupBox5, 'Reset tape position when Spectrum reset' ).SetPosition( 16, 24 ).AutoSize( TRUE );
    // Result.ckTapeNoise.TabOrder = 1
            Result.ckTapeNoise := NewCheckBox( Result.GroupBox5, 'Tape loading / saving noise' ).SetPosition( 16, 48 ).AutoSize( TRUE );
            Result.ckTapeNoise.Checked := TRUE;
    // Result.GroupBox7.TabOrder = 2
          Result.GroupBox7 := NewGroupBox( Result.pnMiscellanous, ' Multicolor auto-select options ' ).SetPosition( 16, 172 ).SetSize( 497, 77 );
    Result.GroupBox7.TabStop := FALSE;
    // Result.ckDiskLoad_multicolorPentagon.TabOrder = 0
            Result.ckDiskLoad_multicolorPentagon := NewCheckBox( Result.GroupBox7, 'Switch to Pentagon multicolor when load disk file' ).SetPosition( 16, 24 ).AutoSize( TRUE );
            Result.ckDiskLoad_multicolorPentagon.Checked := TRUE;
    // Result.ckModelChg_multicolor.TabOrder = 1
            Result.ckModelChg_multicolor := NewCheckBox( Result.GroupBox7, 'Switch to appropriate multicolor when Model changed' ).SetPosition( 16, 48 ).AutoSize( TRUE );
            Result.ckModelChg_multicolor.Checked := TRUE;
      Result.pkunzip_url.OnClick := Result.pkunzip_urlClick;
      Result.pkunzip_url.OnMouseEnter := Result.pkunzip_urlMouseEnter;
      Result.pkunzip_url.OnMouseLeave := Result.pkunzip_urlMouseLeave;
      Result.qBrightGreen.OnClick := Result.colorPanelClick;
      Result.eROMpath5.OnChange := Result.eROMpath0Change;
      Result.Button1.OnClick := Result.Button1Click;
      Result.qBrightMagenta.OnClick := Result.colorPanelClick;
      Result.qBrightRed.OnClick := Result.colorPanelClick;
      Result.eROMpath4.OnChange := Result.eROMpath0Change;
      Result.eROMpath6.OnChange := Result.eROMpath0Change;
      Result.qBrightBlue.OnClick := Result.colorPanelClick;
      Result.rbDirectX.OnClick := Result.rbDirectXClick;
      Result.cbJoy1.OnLeave := Result.cbJoy1Leave;
      Result.cbTstatesPerLine.OnChange := Result.AnyTimingChange;
      Result.eROMpath3.OnChange := Result.eROMpath0Change;
      Result.eROMPath7.OnChange := Result.eROMpath0Change;
      Result.qBrightBlack.OnClick := Result.colorPanelClick;
      Result.rACB.OnClick := Result.rACBClick;
      Result.chkSoundOn.OnClick := Result.chkSoundOnClick;
      Result.eROMpath0.OnChange := Result.eROMpath0Change;
      Result.eROMpath8.OnChange := Result.eROMpath0Change;
      Result.qNormalWhite.OnClick := Result.colorPanelClick;
      Result.chkJoySingle.OnClick := Result.chkJoySingleClick;
      Result.eROMpath2.OnChange := Result.eROMpath0Change;
      Result.qNormalYellow.OnClick := Result.colorPanelClick;
      Result.eROMpath9.OnChange := Result.eROMpath0Change;
      Result.qNormalCyan.OnClick := Result.colorPanelClick;
      Result.eROMpath1.OnChange := Result.eROMpath0Change;
      Result.qNormalGreen.OnClick := Result.colorPanelClick;
      Result.qNormalMagenta.OnClick := Result.colorPanelClick;
      Result.qNormalRed.OnClick := Result.colorPanelClick;
      Result.qNormalBlue.OnClick := Result.colorPanelClick;
      Result.LVFileTypes.OnClick := Result.LVFileTypesClick;
      Result.LVFileTypes.OnChar := Result.LVFileTypesChar;
      Result.qNormalBlack.OnClick := Result.colorPanelClick;
      Result.qBrightCyan.OnClick := Result.colorPanelClick;
      Result.chkContendedON.OnClick := Result.chkContendedONClick;
      Result.qBrightYellow.OnClick := Result.colorPanelClick;
      Result.cbContendedModel.OnSelChange := Result.cbContendedModelSelChange;
      Result.qBrightWhite.OnClick := Result.colorPanelClick;
      Result.LVTBButtons.OnMouseDown := Result.LVTBButtonsMouseDown;
      Result.LVTBButtons.OnChar := Result.LVTBButtonsChar;
      Result.pNormalBlack.OnClick := Result.colorPanelClick;
      Result.ckDiskLoad_multicolorPentagon.OnClick := Result.ckDiskLoad_multicolorPentagonClick;
      Result.chkRemapOn.OnClick := Result.chkRemapOnClick;
      Result.chkFastLDIR.OnClick := Result.chkFastLDIRClick;
      Result.chkConfirmHardwareEmulationOff.OnClick := Result.chkConfirmHardwareEmulationOffClick;
      Result.ckDXVideoFullScreen.OnClick := Result.ckDXVideoFullScreenClick;
      Result.ckResetTapeWithSpeccy.OnClick := Result.ckResetTapeWithSpeccyClick;
      Result.ckDesktopAnimation.OnClick := Result.ckDesktopAnimationClick;
      Result.LV1.OnLVStateChange := Result.LV1LVStateChange;
      Result.chkShowSelMemSizDlg.OnClick := Result.chkShowSelMemSizDlgClick;
      Result.ckDisableScreenSaver.OnClick := Result.ckDisableScreenSaverClick;
      Result.ckTapeNoise.OnClick := Result.ckTapeNoiseClick;
      Result.ckDXLeds.OnClick := Result.ckDXLedsClick;
      Result.edLinesPerFrame.OnLeave := Result.edLinesPerFrameLeave;
      Result.edLinesPerFrame.OnChange := Result.AnyTimingChange;
      Result.chkInvertY1.OnClick := Result.chkInvertY1Click;
      Result.ckToolbarOn.OnClick := Result.ckToolbarOnClick;
      Result.Button7.OnClick := Result.Button7Click;
      Result.pNormalBlue.OnClick := Result.colorPanelClick;
      Result.Button5.OnClick := Result.Button2Click;
      Result.ckModelChg_multicolor.OnClick := Result.ckModelChg_multicolorClick;
      Result.Button4.OnClick := Result.Button4Click;
      Result.rABC.OnClick := Result.rACBClick;
      Result.Button10.OnClick := Result.Button4Click;
      Result.Button19.OnClick := Result.Button4Click;
      Result.chkAYon.OnClick := Result.chkAYonClick;
      Result.rbContendedDefault.OnClick := Result.rbContendedCustomClick;
      Result.btBrowsePKUNZIP.OnClick := Result.btBrowsePKUNZIPClick;
      Result.Button18.OnClick := Result.Button4Click;
      Result.chkJoyTwo.OnClick := Result.chkJoySingleClick;
      Result.Button11.OnClick := Result.Button4Click;
      Result.Button16.OnClick := Result.Button4Click;
      Result.Button12.OnClick := Result.Button4Click;
      Result.Button15.OnClick := Result.Button4Click;
      Result.chkFastHALT.OnClick := Result.chkFastHALTClick;
      Result.Button13.OnClick := Result.Button4Click;
      Result.TC.OnResize := Result.TCResize;
      Result.TC.OnShow := Result.TCShow;
      Result.TC.CurIndex := 6;
      Result.TC.Pages[ 6 ].BringToFront;
      Result.rbWaveMapper.OnClick := Result.rbWaveMapperClick;
      Result.Button14.OnClick := Result.Button4Click;
      Result.chkJoyEnable.OnClick := Result.chkJoyEnableClick;
      Result.cbJoy2.OnLeave := Result.cbJoy1Leave;
      Result.rMono.OnClick := Result.rACBClick;
      Result.pNormalRed.OnClick := Result.colorPanelClick;
      Result.ckDXMaxBorder.OnClick := Result.ckDXMaxBorderClick;
      Result.ckCovox.OnClick := Result.ckCovoxClick;
      Result.Button8.OnClick := Result.Button8Click;
      Result.eROMoffset9.OnChar := Result.eROMoffset0Char;
      Result.eROMoffset9.OnChange := Result.eROMpath0Change;
      Result.eROMoffset8.OnChar := Result.eROMoffset0Char;
      Result.eROMoffset8.OnChange := Result.eROMpath0Change;
      Result.rbContendedCustom.OnClick := Result.rbContendedCustomClick;
      Result.eROMoffset7.OnChar := Result.eROMoffset0Char;
      Result.eROMoffset7.OnChange := Result.eROMpath0Change;
      Result.eROMoffset6.OnChar := Result.eROMoffset0Char;
      Result.eROMoffset6.OnChange := Result.eROMpath0Change;
      Result.eROMoffset5.OnChar := Result.eROMoffset0Char;
      Result.eROMoffset5.OnChange := Result.eROMpath0Change;
      Result.eROMoffset4.OnChar := Result.eROMoffset0Char;
      Result.eROMoffset4.OnChange := Result.eROMpath0Change;
      Result.eROMoffset3.OnChar := Result.eROMoffset0Char;
      Result.eROMoffset3.OnChange := Result.eROMpath0Change;
      Result.eROMoffset2.OnChar := Result.eROMoffset0Char;
      Result.eROMoffset2.OnChange := Result.eROMpath0Change;
      Result.eROMoffset1.OnChar := Result.eROMoffset0Char;
      Result.eROMoffset1.OnChange := Result.eROMpath0Change;
      Result.eROMoffset0.OnChar := Result.eROMoffset0Char;
      Result.eROMoffset0.OnChange := Result.eROMpath0Change;
      Result.chkShowScreenshotDialog.OnClick := Result.chkShowScreenshotDialogClick;
      Result.edTstatesPerFrame.OnLeave := Result.edTstatesPerFrameLeave;
      Result.edTstatesPerFrame.OnChange := Result.AnyTimingChange;
      Result.chkReanimate.OnClick := Result.chkReanimateClick;
      Result.rbPCSpeaker.OnClick := Result.rbPCSpeakerClick;
      Result.cbSoundMode.OnSelChange := Result.cbSoundModeSelChange;
      Result.chkInvertY2.OnClick := Result.chkInvertY1Click;
      Result.chkAYLRInterference.OnClick := Result.chkAYLRInterferenceClick;
      Result.btApplyContended.OnClick := Result.btApplyContendedClick;
      Result.cKempstonMouse.OnClick := Result.cKempstonMouseClick;
      Result.pNormalMagenta.OnClick := Result.colorPanelClick;
      Result.ckSmoothDraw.OnClick := Result.ckSmoothDrawClick;
      Result.chkMIC_On.OnClick := Result.chkMIC_OnClick;
      Result.Button9.OnClick := Result.Button9Click;
      Result.edTstatesBeforeInt.OnLeave := Result.edTstatesBeforeIntLeave;
      Result.edTstatesBeforeInt.OnChange := Result.AnyTimingChange;
      Result.ckCompress_EZX.OnClick := Result.ckCompress_EZXClick;
      Result.Button2.OnClick := Result.Button2Click;
      Result.cAMXMouse.OnClick := Result.cAMXMouseClick;
      Result.chkDblCenter.OnClick := Result.chkDblCenterClick;
      Result.pNormalGreen.OnClick := Result.colorPanelClick;
      Result.ckAllowSkipFrames.OnClick := Result.ckAllowSkipFramesClick;
      Result.edTstatesBeforePaper.OnChange := Result.AnyTimingChange;
      Result.cAutoSave.OnClick := Result.cAutoSaveClick;
      Result.cAYMouse.OnClick := Result.cAYMouseClick;
      Result.cPausedAutoLoaded.OnClick := Result.cPausedAutoLoadedClick;
      Result.edULABuffer.OnLeave := Result.edULABufferLeave;
      Result.edULABuffer.OnChange := Result.AnyTimingChange;
      Result.ckDXVSync.OnClick := Result.ckDXVSyncClick;
      Result.pNormalCyan.OnClick := Result.colorPanelClick;
      Result.Button6.OnClick := Result.Button6Click;
      Result.Button3.OnClick := Result.Button3Click;
      Result.ckAnotherChip.OnClick := Result.ckAnotherChipClick;
      Result.pNormalYellow.OnClick := Result.colorPanelClick;
      Result.thumbAYpitch.OnMessage := Result.thumbAYpitchMessage;
      Result.thumbAYpitch.OnMouseDown := Result.thumbAYpitchMouseDown;
      Result.thumbAYpitch.OnMouseUp := Result.thumbAYpitchMouseUp;
      Result.thumbAYpitch.OnKeyDown := Result.thumbAYpitchKeyDown;
      Result.chkBank0.OnClick := Result.chkBankClick;
      Result.pNormalWhite.OnClick := Result.colorPanelClick;
      Result.chkBank1.OnClick := Result.chkBankClick;
      Result.pBrightBlack.OnClick := Result.colorPanelClick;
      Result.ckJoyOnAlways.OnClick := Result.ckJoyOnAlwaysClick;
      Result.Button17.OnClick := Result.Button17Click;
      Result.chkSndCtlInStatus.OnClick := Result.chkSndCtlInStatusClick;
      Result.pBrightBlue.OnClick := Result.colorPanelClick;
      Result.chkBank2.OnClick := Result.chkBankClick;
      Result.pBrightRed.OnClick := Result.colorPanelClick;
      Result.chkBank3.OnClick := Result.chkBankClick;
      Result.thumbAYvolume.OnMessage := Result.thumbAYvolumeMessage;
      Result.thumbAYvolume.OnMouseDown := Result.thumbAYvolumeMouseDown;
      Result.thumbAYvolume.OnMouseUp := Result.thumbAYvolumeMouseUp;
      Result.thumbAYvolume.OnKeyDown := Result.thumbAYpitchKeyDown;
      Result.chkBank4.OnClick := Result.chkBankClick;
      Result.cbNoise.OnChange := Result.cbNoiseChange;
      Result.pBrightMagenta.OnClick := Result.colorPanelClick;
      Result.chkBank5.OnClick := Result.chkBankClick;
      Result.ckExactSound.OnClick := Result.ckExactSoundClick;
      Result.pBrightGreen.OnClick := Result.colorPanelClick;
      Result.pBrightCyan.OnClick := Result.colorPanelClick;
      Result.chkBank6.OnClick := Result.chkBankClick;
      Result.cSndPlugin.OnClick := Result.cSndPluginClick;
      Result.LVSndPlugin.OnLVStateChange := Result.LVSndPluginLVStateChange;
      Result.pBrightYellow.OnClick := Result.colorPanelClick;
      Result.chkBank7.OnClick := Result.chkBankClick;
      Result.chkPortFE.OnClick := Result.chkBankClick;
      Result.pBrightWhite.OnClick := Result.colorPanelClick;
      Result.edR.OnChange := Result.edRChange;
      Result.chkPortFD.OnClick := Result.chkBankClick;
      Result.chkSnow.OnClick := Result.chkSnowClick;
      Result.edG.OnChange := Result.edRChange;
      Result.chkINFF.OnClick := Result.chkINFFClick;
      Result.chkEvenM1.OnClick := Result.chkEvenM1Click;
      Result.edDelaySequence.OnLeave := Result.edDelaySequenceLeave;
      Result.edDelaySequence.OnChange := Result.AnyTimingChange;
      Result.edB.OnChange := Result.edRChange;
      Result.cbBorderGranularity.OnChange := Result.AnyTimingChange;
      Result.edFFoffset.OnChange := Result.edFFoffsetChange;
      Result.BitBtn2.OnClick := Result.BitBtn2Click;
      Result.BitBtn11.OnClick := Result.BitBtn11Click;
      Result.BitBtn1.OnClick := Result.BitBtn1Click;
      Result.BitBtn10.OnClick := Result.BitBtn2Click;
      Result.BitBtn9.OnClick := Result.BitBtn1Click;
      Result.BitBtn8.OnClick := Result.BitBtn2Click;
      Result.BitBtn7.OnClick := Result.BitBtn1Click;
      Result.BitBtn5.OnClick := Result.BitBtn1Click;
      Result.BitBtn4.OnClick := Result.BitBtn2Click;
      Result.BitBtn3.OnClick := Result.BitBtn1Click;
      Result.BitBtn6.OnClick := Result.BitBtn2Click;
      Result.BitBtn12.OnClick := Result.BitBtn12Click;
      Result.SaveCMapDialog.WndOwner := Result.Form.GetWindowHandle;
      Result.SelectPKUNZIPDialog.WndOwner := Result.Form.GetWindowHandle;
      Result.OpenKeyMapDialog.WndOwner := Result.Form.GetWindowHandle;
      Result.OpenCMapDialog.WndOwner := Result.Form.GetWindowHandle;
      Result.OpenROMDialog.WndOwner := Result.Form.GetWindowHandle;
      Result.SaveKeyMapDialog.WndOwner := Result.Form.GetWindowHandle;
    Result.Form.CenterOnParent.CanResize := False;
    Result.KOLForm1FormCreate( Result );

end;

